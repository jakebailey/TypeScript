awaitInParameterInitializerIsError.ts(1,25): error TS2524: 'await' expressions cannot be used in a parameter initializer.
awaitMissingValueIsError.ts(2,10): error TS1109: Expression expected.
awaitParameterIsError.ts(1,21): error TS1359: Identifier expected. 'await' is a reserved word that cannot be used here.
awaitParameterIsError.ts(1,21): error TS7006: Parameter 'await' implicitly has an 'any' type.
nestedFunctionDeclarationNamedAwaitIsError.ts(2,14): error TS1359: Identifier expected. 'await' is a reserved word that cannot be used here.
nestedFunctionDeclarationNamedYieldIsError.ts(2,14): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
nestedFunctionExpressionNamedAwaitIsError.ts(2,24): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
nestedFunctionExpressionNamedYieldIsError.ts(2,24): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
yieldAsTypeIsOk.ts(1,11): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
yieldAsTypeIsOk.ts(3,12): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
yieldInNestedComputedPropertyIsOk.ts(2,18): error TS7057: 'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation.
yieldInParameterInitializerIsError.ts(1,25): error TS2523: 'yield' expressions cannot be used in a parameter initializer.
yieldInParameterInitializerIsError.ts(1,25): error TS7057: 'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation.
yieldNameIsOk.ts(1,18): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
yieldParameterIsError.ts(1,21): error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
yieldParameterIsError.ts(1,21): error TS7006: Parameter 'yield' implicitly has an 'any' type.
yieldStarMissingValueIsError.ts(2,12): error TS1109: Expression expected.


==== functionDeclarationIsOk.ts (0 errors) ====
    async function * f1() {
    }
==== awaitNameIsOk.ts (0 errors) ====
    async function * await() {
    }
==== yieldNameIsOk.ts (1 errors) ====
    async function * yield() {
                     ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
    }
==== awaitParameterIsError.ts (2 errors) ====
    async function * f4(await) {
                        ~~~~~
!!! error TS1359: Identifier expected. 'await' is a reserved word that cannot be used here.
                        ~~~~~
!!! error TS7006: Parameter 'await' implicitly has an 'any' type.
    }
==== yieldParameterIsError.ts (2 errors) ====
    async function * f5(yield) {
                        ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
                        ~~~~~
!!! error TS7006: Parameter 'yield' implicitly has an 'any' type.
    }
==== awaitInParameterInitializerIsError.ts (1 errors) ====
    async function * f6(a = await 1) {
                            ~~~~~~~
!!! error TS2524: 'await' expressions cannot be used in a parameter initializer.
    }
==== yieldInParameterInitializerIsError.ts (2 errors) ====
    async function * f7(a = yield) {
                            ~~~~~
!!! error TS2523: 'yield' expressions cannot be used in a parameter initializer.
                            ~~~~~
!!! error TS7057: 'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation.
    }
==== nestedAsyncGeneratorIsOk.ts (0 errors) ====
    async function * f8() {
        async function * g() {
        }
    }
==== nestedFunctionDeclarationNamedYieldIsError.ts (1 errors) ====
    async function * f9() {
        function yield() {
                 ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
        }
    }
==== nestedFunctionExpressionNamedYieldIsError.ts (1 errors) ====
    async function * f10() {
        const x = function yield() {
                           ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
        };
    }
==== nestedFunctionDeclarationNamedAwaitIsError.ts (1 errors) ====
    async function * f11() {
        function await() {
                 ~~~~~
!!! error TS1359: Identifier expected. 'await' is a reserved word that cannot be used here.
        }
    }
==== nestedFunctionExpressionNamedAwaitIsError.ts (1 errors) ====
    async function * f12() {
        const x = function yield() {
                           ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
        };
    }
==== yieldIsOk.ts (0 errors) ====
    async function * f13() {
        yield;
    }
==== yieldWithValueIsOk.ts (0 errors) ====
    async function * f14() {
        yield 1;
    }
==== yieldStarMissingValueIsError.ts (1 errors) ====
    async function * f15() {
        yield *;
               ~
!!! error TS1109: Expression expected.
    }
==== yieldStarWithValueIsOk.ts (0 errors) ====
    async function * f16() {
        yield * [];
    }
==== awaitWithValueIsOk.ts (0 errors) ====
    async function * f17() {
        await 1;
    }
==== awaitMissingValueIsError.ts (1 errors) ====
    async function * f18() {
        await;
             ~
!!! error TS1109: Expression expected.
    }
==== awaitAsTypeIsOk.ts (0 errors) ====
    interface await {}
    async function * f19() {
        let x: await;
    }
==== yieldAsTypeIsOk.ts (2 errors) ====
    interface yield {}
              ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
    async function * f20() {
        let x: yield;
               ~~~~~
!!! error TS1212: Identifier expected. 'yield' is a reserved word in strict mode.
    }
==== yieldInNestedComputedPropertyIsOk.ts (1 errors) ====
    async function * f21() {
        const x = { [yield]: 1 };
                     ~~~~~
!!! error TS7057: 'yield' expression implicitly results in an 'any' type because its containing generator lacks a return-type annotation.
    }
    