//// [tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/nullIsSubtypeOfEverythingButUndefined.ts] ////

=== nullIsSubtypeOfEverythingButUndefined.ts ===
// null is a subtype of any other types except undefined

var r0 = true ? null : null;
>r0 : null
>   : ^^^^
>true ? null : null : null
>                   : ^^^^
>true : true
>     : ^^^^

var r0 = true ? null : null;
>r0 : null
>   : ^^^^
>true ? null : null : null
>                   : ^^^^
>true : true
>     : ^^^^

var u: typeof undefined;
>u : undefined
>  : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^

var r0b = true ? u : null;
>r0b : null | undefined
>    : ^^^^^^^^^^^^^^^^
>true ? u : null : null | undefined
>                : ^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>u : undefined
>  : ^^^^^^^^^

var r0b = true ? null : u;
>r0b : null | undefined
>    : ^^^^^^^^^^^^^^^^
>true ? null : u : null | undefined
>                : ^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>u : undefined
>  : ^^^^^^^^^

var r1 = true ? 1 : null;
>r1 : number | null
>   : ^^^^^^^^^^^^^
>true ? 1 : null : 1 | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>1 : 1
>  : ^

var r1 = true ? null : 1;
>r1 : number | null
>   : ^^^^^^^^^^^^^
>true ? null : 1 : 1 | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>1 : 1
>  : ^

var r2 = true ? '' : null;
>r2 : string | null
>   : ^^^^^^^^^^^^^
>true ? '' : null : "" | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>'' : ""
>   : ^^

var r2 = true ? null : '';
>r2 : string | null
>   : ^^^^^^^^^^^^^
>true ? null : '' : "" | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>'' : ""
>   : ^^

var r3 = true ? true : null;
>r3 : boolean | null
>   : ^^^^^^^^^^^^^^
>true ? true : null : true | null
>                   : ^^^^^^^^^^^
>true : true
>     : ^^^^
>true : true
>     : ^^^^

var r3 = true ? null : true;
>r3 : boolean | null
>   : ^^^^^^^^^^^^^^
>true ? null : true : true | null
>                   : ^^^^^^^^^^^
>true : true
>     : ^^^^
>true : true
>     : ^^^^

var r4 = true ? new Date() : null;
>r4 : Date | null
>   : ^^^^^^^^^^^
>true ? new Date() : null : Date | null
>                         : ^^^^^^^^^^^
>true : true
>     : ^^^^
>new Date() : Date
>           : ^^^^
>Date : DateConstructor
>     : ^^^^^^^^^^^^^^^

var r4 = true ? null : new Date();
>r4 : Date | null
>   : ^^^^^^^^^^^
>true ? null : new Date() : Date | null
>                         : ^^^^^^^^^^^
>true : true
>     : ^^^^
>new Date() : Date
>           : ^^^^
>Date : DateConstructor
>     : ^^^^^^^^^^^^^^^

var r5 = true ? /1/ : null;
>r5 : RegExp | null
>   : ^^^^^^^^^^^^^
>true ? /1/ : null : RegExp | null
>                  : ^^^^^^^^^^^^^
>true : true
>     : ^^^^
>/1/ : RegExp
>    : ^^^^^^

var r5 = true ? null : /1/;
>r5 : RegExp | null
>   : ^^^^^^^^^^^^^
>true ? null : /1/ : RegExp | null
>                  : ^^^^^^^^^^^^^
>true : true
>     : ^^^^
>/1/ : RegExp
>    : ^^^^^^

var r6 = true ? { foo: 1 } : null;
>r6 : { foo: number; } | null
>   : ^^^^^^^^^^^^^^^^^^^^^^^
>true ? { foo: 1 } : null : { foo: number; } | null
>                         : ^^^^^^^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>{ foo: 1 } : { foo: number; }
>           : ^^^^^^^^^^^^^^^^
>foo : number
>    : ^^^^^^
>1 : 1
>  : ^

var r6 = true ? null : { foo: 1 };
>r6 : { foo: number; } | null
>   : ^^^^^^^^^^^^^^^^^^^^^^^
>true ? null : { foo: 1 } : { foo: number; } | null
>                         : ^^^^^^^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>{ foo: 1 } : { foo: number; }
>           : ^^^^^^^^^^^^^^^^
>foo : number
>    : ^^^^^^
>1 : 1
>  : ^

var r7 = true ? () => { } : null;
>r7 : (() => void) | null
>   : ^^^^^^^^^^^^^^^^^^^
>true ? () => { } : null : (() => void) | null
>                        : ^^^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>() => { } : () => void
>          : ^^^^^^^^^^

var r7 = true ? null : () => { };
>r7 : (() => void) | null
>   : ^^^^^^^^^^^^^^^^^^^
>true ? null : () => { } : (() => void) | null
>                        : ^^^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>() => { } : () => void
>          : ^^^^^^^^^^

var r8 = true ? <T>(x: T) => { return x } : null;
>r8 : (<T>(x: T) => T) | null
>   : ^^ ^^^^^ ^^^^^^^^^^^^^^
>true ? <T>(x: T) => { return x } : null : (<T>(x: T) => T) | null
>                                        : ^^ ^^^^^ ^^^^^^^^^^^^^^
>true : true
>     : ^^^^
><T>(x: T) => { return x } : <T>(x: T) => T
>                          : ^ ^^^^^ ^^^^^^
>x : T
>  : ^
>x : T
>  : ^

var r8b = true ? null : <T>(x: T) => { return x }; // type parameters not identical across declarations
>r8b : (<T>(x: T) => T) | null
>    : ^^ ^^^^^ ^^^^^^^^^^^^^^
>true ? null : <T>(x: T) => { return x } : (<T>(x: T) => T) | null
>                                        : ^^ ^^^^^ ^^^^^^^^^^^^^^
>true : true
>     : ^^^^
><T>(x: T) => { return x } : <T>(x: T) => T
>                          : ^ ^^^^^ ^^^^^^
>x : T
>  : ^
>x : T
>  : ^

interface I1 { foo: number; }
>foo : number
>    : ^^^^^^

var i1: I1;
>i1 : I1
>   : ^^

var r9 = true ? i1 : null;
>r9 : I1 | null
>   : ^^^^^^^^^
>true ? i1 : null : I1 | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>i1 : I1
>   : ^^

var r9 = true ? null : i1;
>r9 : I1 | null
>   : ^^^^^^^^^
>true ? null : i1 : I1 | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>i1 : I1
>   : ^^

class C1 { foo: number; }
>C1 : C1
>   : ^^
>foo : number
>    : ^^^^^^

var c1: C1;
>c1 : C1
>   : ^^

var r10 = true ? c1 : null;
>r10 : C1 | null
>    : ^^^^^^^^^
>true ? c1 : null : C1 | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>c1 : C1
>   : ^^

var r10 = true ? null : c1;
>r10 : C1 | null
>    : ^^^^^^^^^
>true ? null : c1 : C1 | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>c1 : C1
>   : ^^

class C2<T> { foo: T; }
>C2 : C2<T>
>   : ^^^^^
>foo : T
>    : ^

var c2: C2<number>;
>c2 : C2<number>
>   : ^^^^^^^^^^

var r12 = true ? c2 : null;
>r12 : C2<number> | null
>    : ^^^^^^^^^^^^^^^^^
>true ? c2 : null : C2<number> | null
>                 : ^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>c2 : C2<number>
>   : ^^^^^^^^^^

var r12 = true ? null : c2;
>r12 : C2<number> | null
>    : ^^^^^^^^^^^^^^^^^
>true ? null : c2 : C2<number> | null
>                 : ^^^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>c2 : C2<number>
>   : ^^^^^^^^^^

enum E { A }
>E : E
>  : ^
>A : E.A
>  : ^^^

var r13 = true ? E : null;
>r13 : typeof E | null
>    : ^^^^^^^^^^^^^^^
>true ? E : null : typeof E | null
>                : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>E : typeof E
>  : ^^^^^^^^

var r13 = true ? null : E;
>r13 : typeof E | null
>    : ^^^^^^^^^^^^^^^
>true ? null : E : typeof E | null
>                : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>E : typeof E
>  : ^^^^^^^^

var r14 = true ? E.A : null;
>r14 : E | null
>    : ^^^^^^^^
>true ? E.A : null : E | null
>                  : ^^^^^^^^
>true : true
>     : ^^^^
>E.A : E
>    : ^
>E : typeof E
>  : ^^^^^^^^
>A : E
>  : ^

var r14 = true ? null : E.A;
>r14 : E | null
>    : ^^^^^^^^
>true ? null : E.A : E | null
>                  : ^^^^^^^^
>true : true
>     : ^^^^
>E.A : E
>    : ^
>E : typeof E
>  : ^^^^^^^^
>A : E
>  : ^

function f() { }
>f : typeof f
>  : ^^^^^^^^

module f {
>f : typeof f
>  : ^^^^^^^^

    export var bar = 1;
>bar : number
>    : ^^^^^^
>1 : 1
>  : ^
}
var af: typeof f;
>af : typeof f
>   : ^^^^^^^^
>f : typeof f
>  : ^^^^^^^^

var r15 = true ? af : null;
>r15 : typeof f | null
>    : ^^^^^^^^^^^^^^^
>true ? af : null : typeof f | null
>                 : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>af : typeof f
>   : ^^^^^^^^

var r15 = true ? null : af;
>r15 : typeof f | null
>    : ^^^^^^^^^^^^^^^
>true ? null : af : typeof f | null
>                 : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>af : typeof f
>   : ^^^^^^^^

class c { baz: string }
>c : c
>  : ^
>baz : string
>    : ^^^^^^

module c {
>c : typeof c
>  : ^^^^^^^^

    export var bar = 1;
>bar : number
>    : ^^^^^^
>1 : 1
>  : ^
}
var ac: typeof c;
>ac : typeof c
>   : ^^^^^^^^
>c : typeof c
>  : ^^^^^^^^

var r16 = true ? ac : null;
>r16 : typeof c | null
>    : ^^^^^^^^^^^^^^^
>true ? ac : null : typeof c | null
>                 : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>ac : typeof c
>   : ^^^^^^^^

var r16 = true ? null : ac;
>r16 : typeof c | null
>    : ^^^^^^^^^^^^^^^
>true ? null : ac : typeof c | null
>                 : ^^^^^^^^^^^^^^^
>true : true
>     : ^^^^
>ac : typeof c
>   : ^^^^^^^^

function f17<T>(x: T) {
>f17 : <T>(x: T) => void
>    : ^ ^^^^^ ^^^^^^^^^
>x : T
>  : ^

    var r17 = true ? x : null;
>r17 : T | null
>    : ^^^^^^^^
>true ? x : null : T | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>x : T
>  : ^

    var r17 = true ? null : x;
>r17 : T | null
>    : ^^^^^^^^
>true ? null : x : T | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>x : T
>  : ^
}

function f18<T, U>(x: U) {
>f18 : <T, U>(x: U) => void
>    : ^^^^ ^^^^^ ^^^^^^^^^
>x : U
>  : ^

    var r18 = true ? x : null;
>r18 : U | null
>    : ^^^^^^^^
>true ? x : null : U | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>x : U
>  : ^

    var r18 = true ? null : x;
>r18 : U | null
>    : ^^^^^^^^
>true ? null : x : U | null
>                : ^^^^^^^^
>true : true
>     : ^^^^
>x : U
>  : ^
}
//function f18<T, U extends T>(x: U) {
//    var r18 = true ? x : null;
//    var r18 = true ? null : x;
//}

var r19 = true ? new Object() : null;
>r19 : Object | null
>    : ^^^^^^^^^^^^^
>true ? new Object() : null : Object | null
>                           : ^^^^^^^^^^^^^
>true : true
>     : ^^^^
>new Object() : Object
>             : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^

var r19 = true ? null : new Object();
>r19 : Object | null
>    : ^^^^^^^^^^^^^
>true ? null : new Object() : Object | null
>                           : ^^^^^^^^^^^^^
>true : true
>     : ^^^^
>new Object() : Object
>             : ^^^^^^
>Object : ObjectConstructor
>       : ^^^^^^^^^^^^^^^^^

var r20 = true ? {} : null;
>r20 : {} | null
>    : ^^^^^^^^^
>true ? {} : null : {} | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>{} : {}
>   : ^^

var r20 = true ? null : {};
>r20 : {} | null
>    : ^^^^^^^^^
>true ? null : {} : {} | null
>                 : ^^^^^^^^^
>true : true
>     : ^^^^
>{} : {}
>   : ^^

