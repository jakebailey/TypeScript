//// [tests/cases/compiler/optionalPropertiesSyntax.ts] ////

=== optionalPropertiesSyntax.ts ===
interface fnSigs {
    //functions signatures can be optional
    fn(): void;
>fn : { (): void; (): void; } | undefined

    fn?(): void; //err
>fn : { (): void; (): void; } | undefined

    fn2?(): void;
>fn2 : (() => void) | undefined
}

interface callSig {
    //Call signatures can't be optional
    (): any;
    ()?: any; //err
>any : any

    ?(): any; //err
}

interface constructSig {
    //Construct signatures can't be optional
    new (): any;
    new ()?: any; //err
>any : any

    new ?(): any; //err
>new : (() => any) | undefined
}

interface propertySig {
    //Property signatures can be optional
    prop: any;
>prop : any

    prop?: any;
>prop : any

    prop2?: any;
>prop2 : any
}

interface indexSig {
    //Index signatures can't be optional
    [idx: number]: any;
>idx : number

    [idx: number]?: any; //err
>idx : number
>any : any

    ? [idx: number]: any; //err
>idx : number

    [idx?: number]: any; //err
>idx : number | undefined
}
