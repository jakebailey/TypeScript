arrayLiteralWithMultipleBestCommonTypes.ts(7,11): error TS2454: Variable 'a' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(7,14): error TS2454: Variable 'b' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(8,11): error TS2454: Variable 'b' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(8,14): error TS2454: Variable 'a' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(9,11): error TS2454: Variable 'a' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(9,14): error TS2454: Variable 'b' is used before being assigned.
arrayLiteralWithMultipleBestCommonTypes.ts(9,17): error TS2454: Variable 'c' is used before being assigned.


==== arrayLiteralWithMultipleBestCommonTypes.ts (7 errors) ====
    // when multiple best common types exist we will choose the first candidate
    
    var a: { x: number; y?: number };
    var b: { x: number; z?: number };
    var c: { x: number; a?: number };
    
    var as = [a, b]; // { x: number; y?: number };[]
              ~
!!! error TS2454: Variable 'a' is used before being assigned.
                 ~
!!! error TS2454: Variable 'b' is used before being assigned.
    var bs = [b, a]; // { x: number; z?: number };[]
              ~
!!! error TS2454: Variable 'b' is used before being assigned.
                 ~
!!! error TS2454: Variable 'a' is used before being assigned.
    var cs = [a, b, c]; // { x: number; y?: number };[]
              ~
!!! error TS2454: Variable 'a' is used before being assigned.
                 ~
!!! error TS2454: Variable 'b' is used before being assigned.
                    ~
!!! error TS2454: Variable 'c' is used before being assigned.
    
    var ds = [(x: Object) => 1, (x: string) => 2]; // { (x:Object) => number }[]
    var es = [(x: string) => 2, (x: Object) => 1]; // { (x:string) => number }[]
    var fs = [(a: { x: number; y?: number }) => 1, (b: { x: number; z?: number }) => 2]; // (a: { x: number; y?: number }) => number[]
    var gs = [(b: { x: number; z?: number }) => 2, (a: { x: number; y?: number }) => 1]; // (b: { x: number; z?: number }) => number[]
    