genericCallWithObjectTypeArgs.ts(2,13): error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
genericCallWithObjectTypeArgs.ts(6,13): error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
genericCallWithObjectTypeArgs.ts(10,5): error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
genericCallWithObjectTypeArgs.ts(15,12): error TS2454: Variable 'x' is used before being assigned.
genericCallWithObjectTypeArgs.ts(20,17): error TS2345: Argument of type 'X<D>' is not assignable to parameter of type 'X<C>'.
  Type 'D' is not assignable to type 'C'.
    Types have separate declarations of a private property 'x'.


==== genericCallWithObjectTypeArgs.ts (5 errors) ====
    class C {
        private x: string;
                ~
!!! error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
    }
    
    class D {
        private x: string;
                ~
!!! error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
    }
    
    class X<T> {
        x: T;
        ~
!!! error TS2564: Property 'x' has no initializer and is not definitely assigned in the constructor.
    }
    
    function foo<T>(t: X<T>, t2: X<T>) {
        var x: T;
        return x;
               ~
!!! error TS2454: Variable 'x' is used before being assigned.
    }
    
    var c1 = new X<C>();
    var d1 = new X<D>();
    var r = foo(c1, d1); // error
                    ~~
!!! error TS2345: Argument of type 'X<D>' is not assignable to parameter of type 'X<C>'.
!!! error TS2345:   Type 'D' is not assignable to type 'C'.
!!! error TS2345:     Types have separate declarations of a private property 'x'.
    var r2 = foo(c1, c1); // ok