callWithSpreadES6.ts(14,14): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(15,14): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(17,1): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(18,1): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(18,18): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(19,1): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(19,18): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(21,2): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(22,2): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(22,20): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(23,2): error TS2454: Variable 'obj' is used before being assigned.
callWithSpreadES6.ts(23,20): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(25,1): error TS2454: Variable 'xa' is used before being assigned.
callWithSpreadES6.ts(26,1): error TS2454: Variable 'xa' is used before being assigned.
callWithSpreadES6.ts(26,20): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(27,1): error TS2454: Variable 'xa' is used before being assigned.
callWithSpreadES6.ts(27,20): error TS2454: Variable 'a' is used before being assigned.
callWithSpreadES6.ts(29,12): error TS2454: Variable 'xa' is used before being assigned.


==== callWithSpreadES6.ts (18 errors) ====
    interface X {
        foo(x: number, y: number, ...z: string[]);
    }
    
    function foo(x: number, y: number, ...z: string[]) {
    }
    
    var a: string[];
    var z: number[];
    var obj: X;
    var xa: X[];
    
    foo(1, 2, "abc");
    foo(1, 2, ...a);
                 ~
!!! error TS2454: Variable 'a' is used before being assigned.
    foo(1, 2, ...a, "abc");
                 ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    obj.foo(1, 2, "abc");
    ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
    obj.foo(1, 2, ...a);
    ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
                     ~
!!! error TS2454: Variable 'a' is used before being assigned.
    obj.foo(1, 2, ...a, "abc");
    ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
                     ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    (obj.foo)(1, 2, "abc");
     ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
    (obj.foo)(1, 2, ...a);
     ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
                       ~
!!! error TS2454: Variable 'a' is used before being assigned.
    (obj.foo)(1, 2, ...a, "abc");
     ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
                       ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    xa[1].foo(1, 2, "abc");
    ~~
!!! error TS2454: Variable 'xa' is used before being assigned.
    xa[1].foo(1, 2, ...a);
    ~~
!!! error TS2454: Variable 'xa' is used before being assigned.
                       ~
!!! error TS2454: Variable 'a' is used before being assigned.
    xa[1].foo(1, 2, ...a, "abc");
    ~~
!!! error TS2454: Variable 'xa' is used before being assigned.
                       ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    (<Function>xa[1].foo)(...[1, 2, "abc"]);
               ~~
!!! error TS2454: Variable 'xa' is used before being assigned.
    
    class C {
        constructor(x: number, y: number, ...z: string[]) {
            this.foo(x, y);
            this.foo(x, y, ...z);
        }
        foo(x: number, y: number, ...z: string[]) {
        }
    }
    
    class D extends C {
        constructor() {
            super(1, 2);
            super(1, 2, ...a);
        }
        foo() {
            super.foo(1, 2);
            super.foo(1, 2, ...a);
        }
    }
    