declarationEmitPromise.ts(9,17): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
declarationEmitPromise.ts(18,17): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.


==== declarationEmitPromise.ts (2 errors) ====
    export class bluebird<T> {
        static all: Array<bluebird<any>>;
    }
    
    export async function runSampleWorks<A, B, C, D, E>(
        a: bluebird<A>, b?: bluebird<B>, c?: bluebird<C>, d?: bluebird<D>, e?: bluebird<E>) {
        let result = await (bluebird.all as any)([a, b, c, d, e].filter(el => !!el));
        let func = <T>(f: (a: A, b?: B, c?: C, d?: D, e?: E) => T): T =>
            f.apply(this, result);
                    ~~~~
!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
!!! related TS2738 declarationEmitPromise.ts:5:23: An outer value of 'this' is shadowed by this container.
        let rfunc: typeof func & {} = func as any; // <- This is the only difference
        return rfunc
    }
    
    export async function runSampleBreaks<A, B, C, D, E>(
        a: bluebird<A>, b?: bluebird<B>, c?: bluebird<C>, d?: bluebird<D>, e?: bluebird<E>) {
        let result = await (bluebird.all as any)([a, b, c, d, e].filter(el => !!el));
        let func = <T>(f: (a: A, b?: B, c?: C, d?: D, e?: E) => T): T =>
            f.apply(this, result);
                    ~~~~
!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
!!! related TS2738 declarationEmitPromise.ts:14:23: An outer value of 'this' is shadowed by this container.
        let rfunc: typeof func = func as any; // <- This is the only difference
        return rfunc
    }