//// [tests/cases/compiler/overloadsAndTypeArgumentArityErrors.ts] ////

=== overloadsAndTypeArgumentArityErrors.ts ===
declare function Callbacks(flags?: string): void;
>Callbacks : { (flags?: string): void; <T>(flags?: string | undefined): void; <T1, T2>(flags?: string | undefined): void; }
>          : ^^^^^^^^^^^      ^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>flags : string | undefined
>      : ^^^^^^^^^^^^^^^^^^

declare function Callbacks<T>(flags?: string): void;
>Callbacks : { (flags?: string | undefined): void; <T>(flags?: string): void; <T1, T2>(flags?: string | undefined): void; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>flags : string | undefined
>      : ^^^^^^^^^^^^^^^^^^

declare function Callbacks<T1, T2>(flags?: string): void;
>Callbacks : { (flags?: string | undefined): void; <T>(flags?: string | undefined): void; <T1, T2>(flags?: string): void; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^      ^^^    ^^^
>flags : string | undefined
>      : ^^^^^^^^^^^^^^^^^^

Callbacks<number, string, boolean>('s'); // wrong number of type arguments
>Callbacks<number, string, boolean>('s') : void
>                                        : ^^^^
>Callbacks : { (flags?: string | undefined): void; <T>(flags?: string | undefined): void; <T1, T2>(flags?: string | undefined): void; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'s' : "s"
>    : ^^^

new Callbacks<number, string, boolean>('s'); // wrong number of type arguments
>new Callbacks<number, string, boolean>('s') : any
>                                            : ^^^
>Callbacks : { (flags?: string | undefined): void; <T>(flags?: string | undefined): void; <T1, T2>(flags?: string | undefined): void; }
>          : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>'s' : "s"
>    : ^^^

declare function f<A, B = {}>(arg: number): void;
>f : <A, B = {}>(arg: number) => void
>  : ^^^^^^^^^^^^^^^^^      ^^^^^    
>arg : number
>    : ^^^^^^

f<number>(); // wrong number of arguments (#25683)
>f<number>() : void
>            : ^^^^
>f : <A, B = {}>(arg: number) => void
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

