//// [tests/cases/compiler/sliceResultCast.ts] ////

=== sliceResultCast.ts ===
declare var x: [number, string] | [number, string, string];
>x : [number, string] | [number, string, string]
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

x.slice(1) as readonly string[];
>x.slice(1) as readonly string[] : readonly string[]
>                                : ^^^^^^^^^^^^^^^^^
>x.slice(1) : (string | number)[]
>           : ^^^^^^^^^^^^^^^^^^^
>x.slice : ((start?: number | undefined, end?: number | undefined) => (string | number)[]) | ((start?: number | undefined, end?: number | undefined) => (string | number)[])
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>x : [number, string] | [number, string, string]
>  : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>slice : ((start?: number | undefined, end?: number | undefined) => (string | number)[]) | ((start?: number | undefined, end?: number | undefined) => (string | number)[])
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>1 : 1
>  : ^

