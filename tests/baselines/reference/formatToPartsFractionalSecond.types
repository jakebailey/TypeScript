//// [tests/cases/compiler/formatToPartsFractionalSecond.ts] ////

=== formatToPartsFractionalSecond.ts ===
new Intl.DateTimeFormat().formatToParts().find((val) => val.type === 'fractionalSecond')
>new Intl.DateTimeFormat().formatToParts().find((val) => val.type === 'fractionalSecond') : Intl.DateTimeFormatPart | undefined
>new Intl.DateTimeFormat().formatToParts().find : { <S extends Intl.DateTimeFormatPart>(predicate: (value: Intl.DateTimeFormatPart, index: number, obj: Intl.DateTimeFormatPart[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: Intl.DateTimeFormatPart, index: number, obj: Intl.DateTimeFormatPart[]) => unknown, thisArg?: any): Intl.DateTimeFormatPart | undefined; }
>new Intl.DateTimeFormat().formatToParts() : Intl.DateTimeFormatPart[]
>new Intl.DateTimeFormat().formatToParts : (date?: number | Date | undefined) => Intl.DateTimeFormatPart[]
>new Intl.DateTimeFormat() : Intl.DateTimeFormat
>Intl.DateTimeFormat : { (locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined): Intl.DateTimeFormat; new (locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined): Intl.DateTimeFormat; supportedLocalesOf(locales: string | string[], options?: Intl.DateTimeFormatOptions | undefined): string[]; readonly prototype: Intl.DateTimeFormat; }
>Intl : typeof Intl
>DateTimeFormat : { (locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined): Intl.DateTimeFormat; new (locales?: string | string[] | undefined, options?: Intl.DateTimeFormatOptions | undefined): Intl.DateTimeFormat; supportedLocalesOf(locales: string | string[], options?: Intl.DateTimeFormatOptions | undefined): string[]; readonly prototype: Intl.DateTimeFormat; }
>formatToParts : (date?: number | Date | undefined) => Intl.DateTimeFormatPart[]
>find : { <S extends Intl.DateTimeFormatPart>(predicate: (value: Intl.DateTimeFormatPart, index: number, obj: Intl.DateTimeFormatPart[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: Intl.DateTimeFormatPart, index: number, obj: Intl.DateTimeFormatPart[]) => unknown, thisArg?: any): Intl.DateTimeFormatPart | undefined; }
>(val) => val.type === 'fractionalSecond' : (val: Intl.DateTimeFormatPart) => boolean
>val : Intl.DateTimeFormatPart
>val.type === 'fractionalSecond' : boolean
>val.type : keyof Intl.DateTimeFormatPartTypesRegistry
>val : Intl.DateTimeFormatPart
>type : keyof Intl.DateTimeFormatPartTypesRegistry
>'fractionalSecond' : "fractionalSecond"

