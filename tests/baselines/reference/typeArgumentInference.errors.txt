typeArgumentInference.ts(32,27): error TS2322: Type 'undefined' is not assignable to type 'Date'.
typeArgumentInference.ts(39,31): error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.
typeArgumentInference.ts(45,31): error TS2345: Argument of type 'null' is not assignable to parameter of type 'number'.
typeArgumentInference.ts(62,27): error TS2345: Argument of type 'null' is not assignable to parameter of type '(a: string) => string'.
typeArgumentInference.ts(66,5): error TS2322: Type 'null' is not assignable to type 'T'.
  'T' could be instantiated with an arbitrary type which could be unrelated to 'null'.
typeArgumentInference.ts(68,29): error TS2345: Argument of type '0' is not assignable to parameter of type '""'.
typeArgumentInference.ts(69,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9a' must be of type 'string', but here has type '{}'.
typeArgumentInference.ts(70,75): error TS2345: Argument of type 'null' is not assignable to parameter of type '{ a?: number | undefined; b?: string | undefined; }'.
typeArgumentInference.ts(83,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9e' must be of type '{ x: number; z: Date; y?: undefined; } | { x: number; y: string; z?: undefined; } | undefined', but here has type '{}'.
typeArgumentInference.ts(84,30): error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'A92'.
typeArgumentInference.ts(98,5): error TS2403: Subsequent variable declarations must have the same type.  Variable 'arr' must be of type 'never[] | null | undefined', but here has type 'any[]'.


==== typeArgumentInference.ts (11 errors) ====
    // Generic call with no parameters
    function noParams<T>() { }
    noParams();
    noParams<string>();
    noParams<{}>();
    
    // Generic call with parameters but none use type parameter type
    function noGenericParams<T>(n: string) { }
    noGenericParams('');
    noGenericParams<number>('');
    noGenericParams<{}>('');
    
    // Generic call with multiple type parameters and only one used in parameter type annotation
    function someGenerics1<T, U>(n: T, m: number) { }
    someGenerics1(3, 4);
    someGenerics1<number, {}>(3, 4);
    
    // Generic call with argument of function type whose parameter is of type parameter type
    function someGenerics2a<T>(n: (x: T) => void) { }
    someGenerics2a((n: string) => n);
    someGenerics2a<string>((n: string) => n);
    someGenerics2a<string>((n) => n.substr(0));
    
    function someGenerics2b<T, U>(n: (x: T, y: U) => void) { }
    someGenerics2b((n: string, x: number) => n);
    someGenerics2b<string, number>((n: string, t: number) => n);
    someGenerics2b<string, number>((n, t) => n.substr(t * t));
    
    // Generic call with argument of function type whose parameter is not of type parameter type but body/return type uses type parameter
    function someGenerics3<T>(producer: () => T) { }
    someGenerics3(() => '');
    someGenerics3<Date>(() => undefined);
                              ~~~~~~~~~
!!! error TS2322: Type 'undefined' is not assignable to type 'Date'.
!!! related TS6502 typeArgumentInference.ts:30:37: The expected type comes from the return type of this signature.
    someGenerics3<number>(() => 3);
    
    // 2 parameter generic call with argument 1 of type parameter type and argument 2 of function type whose parameter is of type parameter type
    function someGenerics4<T, U>(n: T, f: (x: U) => void) { }
    someGenerics4(4, () => null);
    someGenerics4<string, number>('', () => 3);
    someGenerics4<string, number>(null, null);
                                  ~~~~
!!! error TS2345: Argument of type 'null' is not assignable to parameter of type 'string'.
    
    // 2 parameter generic call with argument 2 of type parameter type and argument 1 of function type whose parameter is of type parameter type
    function someGenerics5<U, T>(n: T, f: (x: U) => void) { }
    someGenerics5(4, () => null);
    someGenerics5<number, string>('', () => 3);
    someGenerics5<string, number>(null, null);
                                  ~~~~
!!! error TS2345: Argument of type 'null' is not assignable to parameter of type 'number'.
    
    // Generic call with multiple arguments of function types that each have parameters of the same generic type
    function someGenerics6<A>(a: (a: A) => A, b: (b: A) => A, c: (c: A) => A) { }
    someGenerics6(n => n, n => n, n => n);
    someGenerics6<number>(n => n, n => n, n => n);
    someGenerics6<number>((n: number) => n, (n: number) => n, (n: number) => n);
    
    // Generic call with multiple arguments of function types that each have parameters of different generic type
    function someGenerics7<A, B, C>(a: (a: A) => A, b: (b: B) => B, c: (c: C) => C) { }
    someGenerics7(n => n, n => n, n => n);
    someGenerics7<number, string, number>(n => n, n => n, n => n);
    someGenerics7<number, string, number>((n: number) => n, (n: string) => n, (n: number) => n);
    
    // Generic call with argument of generic function type
    function someGenerics8<T>(n: T): T { return n; }
    var x = someGenerics8(someGenerics7);
    x<string, string, string>(null, null, null);
                              ~~~~
!!! error TS2345: Argument of type 'null' is not assignable to parameter of type '(a: string) => string'.
    
    // Generic call with multiple parameters of generic type passed arguments with no best common type
    function someGenerics9<T>(a: T, b: T, c: T): T {
        return null;
        ~~~~~~
!!! error TS2322: Type 'null' is not assignable to type 'T'.
!!! error TS2322:   'T' could be instantiated with an arbitrary type which could be unrelated to 'null'.
    }
    var a9a = someGenerics9('', 0, []);
                                ~
!!! error TS2345: Argument of type '0' is not assignable to parameter of type '""'.
    var a9a: {};
        ~~~
!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9a' must be of type 'string', but here has type '{}'.
!!! related TS6203 typeArgumentInference.ts:68:5: 'a9a' was also declared here.
    var a9b = someGenerics9<{ a?: number; b?: string; }>({ a: 0 }, { b: '' }, null);
                                                                              ~~~~
!!! error TS2345: Argument of type 'null' is not assignable to parameter of type '{ a?: number | undefined; b?: string | undefined; }'.
    var a9b: { a?: number; b?: string; };
    
    // Generic call with multiple parameters of generic type passed arguments with multiple best common types
    interface A91 {
        x: number;
        y?: string;
    }
    interface A92 {
        x: number;
        z?: Date;
    }
    var a9e = someGenerics9(undefined, { x: 6, z: new Date() }, { x: 6, y: '' });
    var a9e: {};
        ~~~
!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'a9e' must be of type '{ x: number; z: Date; y?: undefined; } | { x: number; y: string; z?: undefined; } | undefined', but here has type '{}'.
!!! related TS6203 typeArgumentInference.ts:82:5: 'a9e' was also declared here.
    var a9f = someGenerics9<A92>(undefined, { x: 6, z: new Date() }, { x: 6, y: '' });
                                 ~~~~~~~~~
!!! error TS2345: Argument of type 'undefined' is not assignable to parameter of type 'A92'.
    var a9f: A92;
    
    // Generic call with multiple parameters of generic type passed arguments with a single best common type
    var a9d = someGenerics9({ x: 3 }, { x: 6 }, { x: 6 });
    var a9d: { x: number; };
    
    // Generic call with multiple parameters of generic type where one argument is of type 'any'
    var anyVar: any;
    var a = someGenerics9(7, anyVar, 4);
    var a: any;
    
    // Generic call with multiple parameters of generic type where one argument is [] and the other is not 'any'
    var arr = someGenerics9([], null, undefined);
    var arr: any[];
        ~~~
!!! error TS2403: Subsequent variable declarations must have the same type.  Variable 'arr' must be of type 'never[] | null | undefined', but here has type 'any[]'.
!!! related TS6203 typeArgumentInference.ts:97:5: 'arr' was also declared here.
    
    