callSignaturesWithParameterInitializers.ts(19,1): error TS2454: Variable 'c' is used before being assigned.
callSignaturesWithParameterInitializers.ts(20,1): error TS2454: Variable 'c' is used before being assigned.
callSignaturesWithParameterInitializers.ts(24,5): error TS7020: Call signature, which lacks return-type annotation, implicitly has an 'any' return type.
callSignaturesWithParameterInitializers.ts(24,6): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
callSignaturesWithParameterInitializers.ts(25,5): error TS7010: 'foo', which lacks return-type annotation, implicitly has an 'any' return type.
callSignaturesWithParameterInitializers.ts(25,20): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
callSignaturesWithParameterInitializers.ts(29,1): error TS2454: Variable 'i' is used before being assigned.
callSignaturesWithParameterInitializers.ts(30,1): error TS2454: Variable 'i' is used before being assigned.
callSignaturesWithParameterInitializers.ts(31,1): error TS2454: Variable 'i' is used before being assigned.
callSignaturesWithParameterInitializers.ts(32,1): error TS2454: Variable 'i' is used before being assigned.
callSignaturesWithParameterInitializers.ts(36,5): error TS7020: Call signature, which lacks return-type annotation, implicitly has an 'any' return type.
callSignaturesWithParameterInitializers.ts(36,6): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
callSignaturesWithParameterInitializers.ts(37,5): error TS7010: 'foo', which lacks return-type annotation, implicitly has an 'any' return type.
callSignaturesWithParameterInitializers.ts(37,9): error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
callSignaturesWithParameterInitializers.ts(40,1): error TS2454: Variable 'a' is used before being assigned.
callSignaturesWithParameterInitializers.ts(41,1): error TS2454: Variable 'a' is used before being assigned.
callSignaturesWithParameterInitializers.ts(42,1): error TS2454: Variable 'a' is used before being assigned.
callSignaturesWithParameterInitializers.ts(43,1): error TS2454: Variable 'a' is used before being assigned.


==== callSignaturesWithParameterInitializers.ts (18 errors) ====
    // Optional parameters allow initializers only in implementation signatures
    
    function foo(x = 1) { }
    var f = function foo(x = 1) { }
    var f2 = (x: number, y = 1) => { }
    
    foo(1);
    foo();
    f(1);
    f();
    f2(1);
    f2(1, 2);
    
    class C {
        foo(x = 1) { }
    }
    
    var c: C;
    c.foo();
    ~
!!! error TS2454: Variable 'c' is used before being assigned.
    c.foo(1);
    ~
!!! error TS2454: Variable 'c' is used before being assigned.
    
    // these are errors
    interface I {
        (x = 1);
        ~~~~~~~~
!!! error TS7020: Call signature, which lacks return-type annotation, implicitly has an 'any' return type.
         ~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
        foo(x: number, y = 1);
        ~~~~~~~~~~~~~~~~~~~~~~
!!! error TS7010: 'foo', which lacks return-type annotation, implicitly has an 'any' return type.
                       ~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
    }
    
    var i: I;
    i();
    ~
!!! error TS2454: Variable 'i' is used before being assigned.
    i(1);
    ~
!!! error TS2454: Variable 'i' is used before being assigned.
    i.foo(1);
    ~
!!! error TS2454: Variable 'i' is used before being assigned.
    i.foo(1, 2);
    ~
!!! error TS2454: Variable 'i' is used before being assigned.
    
    // these are errors
    var a: {
        (x = 1);
        ~~~~~~~~
!!! error TS7020: Call signature, which lacks return-type annotation, implicitly has an 'any' return type.
         ~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
        foo(x = 1);
        ~~~~~~~~~~~
!!! error TS7010: 'foo', which lacks return-type annotation, implicitly has an 'any' return type.
            ~~~~~
!!! error TS2371: A parameter initializer is only allowed in a function or constructor implementation.
    }
    
    a();
    ~
!!! error TS2454: Variable 'a' is used before being assigned.
    a(1);
    ~
!!! error TS2454: Variable 'a' is used before being assigned.
    a.foo();
    ~
!!! error TS2454: Variable 'a' is used before being assigned.
    a.foo(1);
    ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    var b = {
        foo(x = 1) { },
        a: function foo(x: number, y = 1) { },
        b: (x = 1) => { }
    }
    
    b.foo();
    b.foo(1);
    b.a(1);
    b.a(1, 2);
    b.b();
    b.b(1);
    