superPropertyAccess_ES5.ts(11,22): error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
superPropertyAccess_ES5.ts(19,13): error TS2564: Property '_property' has no initializer and is not definitely assigned in the constructor.
superPropertyAccess_ES5.ts(26,15): error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.


==== superPropertyAccess_ES5.ts (3 errors) ====
    class MyBase {
      getValue(): number { return 1; }
      get value(): number { return 1; }
    }
    
    class MyDerived extends MyBase {
      constructor() {
        super();
    
        const f1 = super.getValue();
        const f2 = super.value;
                         ~~~~~
!!! error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
      }
    }
    
    var d = new MyDerived();
    var f3 = d.value;
    
    class A {
        private _property: string;
                ~~~~~~~~~
!!! error TS2564: Property '_property' has no initializer and is not definitely assigned in the constructor.
        get property() { return this._property; }
        set property(value: string) { this._property = value }
    }
    
    class B extends A {
        set property(value: string) {
            super.property = value + " addition";
                  ~~~~~~~~
!!! error TS2340: Only public and protected methods of the base class are accessible via the 'super' keyword.
        }
    }