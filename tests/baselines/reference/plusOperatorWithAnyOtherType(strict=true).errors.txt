plusOperatorWithAnyOtherType.ts(7,41): error TS7006: Parameter 's1' implicitly has an 'any' type.
plusOperatorWithAnyOtherType.ts(26,24): error TS18048: 'ANY1' is possibly 'undefined'.
plusOperatorWithAnyOtherType.ts(30,24): error TS2454: Variable 'obj' is used before being assigned.
plusOperatorWithAnyOtherType.ts(34,24): error TS18050: The value 'undefined' cannot be used here.
plusOperatorWithAnyOtherType.ts(35,24): error TS18050: The value 'null' cannot be used here.
plusOperatorWithAnyOtherType.ts(44,25): error TS2532: Object is possibly 'undefined'.
plusOperatorWithAnyOtherType.ts(46,26): error TS18050: The value 'null' cannot be used here.
plusOperatorWithAnyOtherType.ts(46,33): error TS18050: The value 'undefined' cannot be used here.
plusOperatorWithAnyOtherType.ts(47,26): error TS18050: The value 'null' cannot be used here.
plusOperatorWithAnyOtherType.ts(47,33): error TS18050: The value 'null' cannot be used here.
plusOperatorWithAnyOtherType.ts(48,26): error TS18050: The value 'undefined' cannot be used here.
plusOperatorWithAnyOtherType.ts(48,38): error TS18050: The value 'undefined' cannot be used here.
plusOperatorWithAnyOtherType.ts(52,2): error TS18048: 'ANY1' is possibly 'undefined'.
plusOperatorWithAnyOtherType.ts(54,1): error TS2695: Left side of comma operator is unused and has no side effects.


==== plusOperatorWithAnyOtherType.ts (14 errors) ====
    // + operator on any type
    
    var ANY: any;
    var ANY1;
    var ANY2: any[] = ["", ""];
    var obj: () => {}
    var obj1 = { x: (s: string) => { }, y: (s1) => { }};
                                            ~~
!!! error TS7006: Parameter 's1' implicitly has an 'any' type.
    
    function foo(): any {
        var a;
        return a;
    }
    class A {
        public a: any;
        static foo() {
            var a;
            return a;
        }
    }
    module M {
        export var n: any;
    }
    var objA = new A();
    
    // any other type var
    var ResultIsNumber1 = +ANY1;
                           ~~~~
!!! error TS18048: 'ANY1' is possibly 'undefined'.
    var ResultIsNumber2 = +ANY2;
    var ResultIsNumber3 = +A;
    var ResultIsNumber4 = +M;
    var ResultIsNumber5 = +obj;
                           ~~~
!!! error TS2454: Variable 'obj' is used before being assigned.
    var ResultIsNumber6 = +obj1;
    
    // any type literal
    var ResultIsNumber7 = +undefined;
                           ~~~~~~~~~
!!! error TS18050: The value 'undefined' cannot be used here.
    var ResultIsNumber8 = +null;
                           ~~~~
!!! error TS18050: The value 'null' cannot be used here.
    
    // any type expressions
    var ResultIsNumber9 = +ANY2[0];
    var ResultIsNumber10 = +obj1.x;
    var ResultIsNumber11 = +obj1.y;
    var ResultIsNumber12 = +objA.a;
    var ResultIsNumber13 = +M.n;
    var ResultIsNumber14 = +foo();
    var ResultIsNumber15 = +A.foo();
                            ~~~~~~~
!!! error TS2532: Object is possibly 'undefined'.
    var ResultIsNumber16 = +(ANY + ANY1);
    var ResultIsNumber17 = +(null + undefined);
                             ~~~~
!!! error TS18050: The value 'null' cannot be used here.
                                    ~~~~~~~~~
!!! error TS18050: The value 'undefined' cannot be used here.
    var ResultIsNumber18 = +(null + null);
                             ~~~~
!!! error TS18050: The value 'null' cannot be used here.
                                    ~~~~
!!! error TS18050: The value 'null' cannot be used here.
    var ResultIsNumber19 = +(undefined + undefined);
                             ~~~~~~~~~
!!! error TS18050: The value 'undefined' cannot be used here.
                                         ~~~~~~~~~
!!! error TS18050: The value 'undefined' cannot be used here.
    
    // miss assignment operators
    +ANY;
    +ANY1;
     ~~~~
!!! error TS18048: 'ANY1' is possibly 'undefined'.
    +ANY2[0];
    +ANY, ANY1;
    ~~~~
!!! error TS2695: Left side of comma operator is unused and has no side effects.
    +objA.a;
    +M.n;