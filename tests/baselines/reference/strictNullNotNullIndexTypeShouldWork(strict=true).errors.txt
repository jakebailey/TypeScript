strictNullNotNullIndexTypeShouldWork.ts(6,5): error TS2564: Property 'attrs' has no initializer and is not definitely assigned in the constructor.
strictNullNotNullIndexTypeShouldWork.ts(18,5): error TS2564: Property 'properties' has no initializer and is not definitely assigned in the constructor.
strictNullNotNullIndexTypeShouldWork.ts(27,5): error TS2564: Property 'attrs' has no initializer and is not definitely assigned in the constructor.


==== strictNullNotNullIndexTypeShouldWork.ts (3 errors) ====
    interface A {
        params?: { name: string; };
    }
    
    class Test<T extends A> {
        attrs: Readonly<T>;
        ~~~~~
!!! error TS2564: Property 'attrs' has no initializer and is not definitely assigned in the constructor.
    
        m() {
            this.attrs.params!.name;
        }
    }
    
    interface Foo {
        foo?: number;
    }
    
    class FooClass<P extends Foo = Foo> {
        properties: Readonly<P>;
        ~~~~~~~~~~
!!! error TS2564: Property 'properties' has no initializer and is not definitely assigned in the constructor.
    
        foo(): number {
            const { foo = 42 } = this.properties;
            return foo;
        }
    }
    
    class Test2<T extends A> {
        attrs: Readonly<T>;
        ~~~~~
!!! error TS2564: Property 'attrs' has no initializer and is not definitely assigned in the constructor.
    
        m() {
            return this.attrs.params!; // Return type should maintain relationship with `T` after being not-null-asserted, ideally
        }
    }