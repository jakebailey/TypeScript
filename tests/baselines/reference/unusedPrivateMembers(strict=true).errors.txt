unusedPrivateMembers.ts(31,17): error TS7032: Property 'x' implicitly has type 'any', because its set accessor lacks a parameter type annotation.
unusedPrivateMembers.ts(31,19): error TS7006: Parameter 'v' implicitly has an 'any' type.
unusedPrivateMembers.ts(42,13): error TS2564: Property 'p' has no initializer and is not definitely assigned in the constructor.
unusedPrivateMembers.ts(56,13): error TS6133: 'b' is declared but its value is never read.


==== unusedPrivateMembers.ts (4 errors) ====
    class Test1 {
        private initializeInternal() {
        }
    
        public test() {
            var x = new Test1();
            x.initializeInternal();
        }
    }
    
    class Test2 {
        private p = 0;
        public test() {
            var x = new Test2();
            x.p;
        }
    }
    
    class Test3 {
        private get x () {
            return 0;
        }
    
        public test() {
            var x = new Test3();
            x.x;
        }
    }
    
    class Test4 {
        private set x(v) {
                    ~
!!! error TS7032: Property 'x' implicitly has type 'any', because its set accessor lacks a parameter type annotation.
                      ~
!!! error TS7006: Parameter 'v' implicitly has an 'any' type.
            v;
        }
    
        public test() {
            var x = new Test4();
            x.x;
        }
    }
    
    class Test5<T> {
        private p: T;
                ~
!!! error TS2564: Property 'p' has no initializer and is not definitely assigned in the constructor.
        public test() {
            var x = new Test5<number>();
            x.p;
        }
    }
    
    class Test6 {
        private get a() {
            return 0;
        }
        private set a(v) {
            v;
        }
        private b = 0;
                ~
!!! error TS6133: 'b' is declared but its value is never read.
    
        public test() {
            var x = new Test6();
            x.a++;
        }
    }
    