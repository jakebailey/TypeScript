constructSignaturesWithIdenticalOverloads.ts(25,14): error TS2454: Variable 'i' is used before being assigned.
constructSignaturesWithIdenticalOverloads.ts(35,14): error TS2454: Variable 'i2' is used before being assigned.
constructSignaturesWithIdenticalOverloads.ts(42,14): error TS2454: Variable 'a' is used before being assigned.
constructSignaturesWithIdenticalOverloads.ts(49,14): error TS2454: Variable 'b' is used before being assigned.


==== constructSignaturesWithIdenticalOverloads.ts (4 errors) ====
    // Duplicate overloads of construct signatures should generate errors
    
    class C {
        constructor(x: number, y: string);
        constructor(x: number, y: string); // error
        constructor(x: number) { }
    }
    
    var r1 = new C(1, '');
    
    class C2<T> {
        constructor(x: T, y: string);
        constructor(x: T, y: string); // error
        constructor(x: T) { }
    }
    
    var r2 = new C2(1, '');
    
    interface I {
        new (x: number, y: string): C;
        new (x: number, y: string): C; // error
    }
    
    var i: I;
    var r3 = new i(1, '');
                 ~
!!! error TS2454: Variable 'i' is used before being assigned.
    
    interface I2<T> {
        new (x: T, y: string): C2<T>;
        new (x: T, y: string): C2<T>; // error
        new <T>(x: T, y: string): C2<T>;
        new <T>(x: T, y: string): C2<T>; // error
    }
    
    var i2: I2<number>;
    var r4 = new i2(1, '');
                 ~~
!!! error TS2454: Variable 'i2' is used before being assigned.
    
    var a: {
        new (x: number, y: string): C;
        new (x: number, y: string): C; // error
    }
    
    var r5 = new a(1, '');
                 ~
!!! error TS2454: Variable 'a' is used before being assigned.
    
    var b: {
        new <T>(x: T, y: string): C2<T>;
        new <T>(x: T, y: string): C2<T>; // error
    }
    
    var r6 = new b(1, '');
                 ~
!!! error TS2454: Variable 'b' is used before being assigned.