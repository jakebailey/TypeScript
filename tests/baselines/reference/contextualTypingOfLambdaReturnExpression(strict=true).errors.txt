contextualTypingOfLambdaReturnExpression.ts(1,10): error TS7010: 'callb', which lacks return-type annotation, implicitly has an 'any' return type.
contextualTypingOfLambdaReturnExpression.ts(2,10): error TS7010: 'callb', which lacks return-type annotation, implicitly has an 'any' return type.
contextualTypingOfLambdaReturnExpression.ts(3,16): error TS7006: Parameter 'a' implicitly has an 'any' type.
contextualTypingOfLambdaReturnExpression.ts(5,16): error TS2339: Property 'length' does not exist on type 'number'.
contextualTypingOfLambdaReturnExpression.ts(6,18): error TS2339: Property 'length' does not exist on type 'number'.


==== contextualTypingOfLambdaReturnExpression.ts (5 errors) ====
    function callb(lam: (l: number) => void);
             ~~~~~
!!! error TS7010: 'callb', which lacks return-type annotation, implicitly has an 'any' return type.
    function callb(lam: (n: string) => void);
             ~~~~~
!!! error TS7010: 'callb', which lacks return-type annotation, implicitly has an 'any' return type.
    function callb(a) { }
                   ~
!!! error TS7006: Parameter 'a' implicitly has an 'any' type.
    
    callb((a) => a.length); // Ok, we choose the second overload because the first one gave us an error when trying to resolve the lambda return type
                   ~~~~~~
!!! error TS2339: Property 'length' does not exist on type 'number'.
    callb((a) => { a.length; }); // Error, we picked the first overload and errored when type checking the lambda body
                     ~~~~~~
!!! error TS2339: Property 'length' does not exist on type 'number'.