//// [tests/cases/compiler/argumentsReferenceInObjectLiteral_Js.ts] ////

=== /a.js ===
const a = () => {
>a : () => { arguments: never[]; }
>() => {    return {        arguments: [],    };} : () => { arguments: never[]; }

    return {
>{        arguments: [],    } : { arguments: never[]; }

        arguments: [],
>arguments : never[]
>[] : never[]

    };
};

const b = () => {
>b : () => { arguments: never[]; }
>() => {    const c = {        arguments: [],    }    return c;} : () => { arguments: never[]; }

    const c = {
>c : { arguments: never[]; }
>{        arguments: [],    } : { arguments: never[]; }

        arguments: [],
>arguments : never[]
>[] : never[]
    }
    return c;
>c : { arguments: never[]; }

};

const c = () => {
>c : () => { arguments: any; }
>() => {    return {        arguments,    };} : () => { arguments: any; }

    return {
>{        arguments,    } : { arguments: any; }

        arguments,
>arguments : any

    };
}

const d = () => {
>d : () => { arguments: undefined; }
>() => {    const arguments = undefined;    return {        arguments,    };} : () => { arguments: undefined; }

    const arguments = undefined;
>arguments : undefined
>undefined : undefined

    return {
>{        arguments,    } : { arguments: undefined; }

        arguments,
>arguments : undefined

    };
}

