//// [tests/cases/compiler/forwardDeclaredCommonTypes01.ts] ////

=== forwardDeclaredCommonTypes01.ts ===
interface Promise<T> {}
interface Symbol {}
interface Map<K, V> {}
interface WeakMap<K extends object, V> {}
interface Set<T> {}
interface WeakSet<T extends object> {}

(function() {
>(function() {    new Promise;    new Symbol; Symbol();    new Map;    new WeakMap;    new Set;    new WeakSet;}) : () => void
>                                                                                                                 : ^^^^^^^^^^
>function() {    new Promise;    new Symbol; Symbol();    new Map;    new WeakMap;    new Set;    new WeakSet;} : () => void
>                                                                                                               : ^^^^^^^^^^

    new Promise;
>new Promise : Promise<unknown>
>            : ^^^^^^^^^^^^^^^^
>Promise : PromiseConstructor
>        : ^^^^^^^^^^^^^^^^^^

    new Symbol; Symbol();
>new Symbol : any
>           : ^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^
>Symbol() : symbol
>         : ^^^^^^
>Symbol : SymbolConstructor
>       : ^^^^^^^^^^^^^^^^^

    new Map;
>new Map : Map<any, any>
>        : ^^^^^^^^^^^^^
>Map : MapConstructor
>    : ^^^^^^^^^^^^^^

    new WeakMap;
>new WeakMap : WeakMap<object, any>
>            : ^^^^^^^^^^^^^^^^^^^^
>WeakMap : WeakMapConstructor
>        : ^^^^^^^^^^^^^^^^^^

    new Set;
>new Set : Set<unknown>
>        : ^^^^^^^^^^^^
>Set : SetConstructor
>    : ^^^^^^^^^^^^^^

    new WeakSet;
>new WeakSet : WeakSet<object>
>            : ^^^^^^^^^^^^^^^
>WeakSet : WeakSetConstructor
>        : ^^^^^^^^^^^^^^^^^^

});

