//// [tests/cases/compiler/spellingSuggestionJSXAttribute.tsx] ////

=== Performance Stats ===
Assignability cache: 2,200 / 2,200 (nearest 100)
Type Count: 7,800 / 7,800 (nearest 100)
Instantiation count: 90,000 / 90,000 (nearest 500)
Symbol count: 67,000 / 67,000 (nearest 500)

=== spellingSuggestionJSXAttribute.tsx ===
/// <reference path="react16.d.ts" />
import * as React from "react";
>React : typeof React
>      : ^^^^^^^^^^^^

function MyComp2(props: { className?: string, htmlFor?: string }) {
>MyComp2 : (props: { className?: string; htmlFor?: string; }) => never
>        : ^^^^^^^^                                         ^^^^^^^^^^
>props : { className?: string | undefined; htmlFor?: string | undefined; }
>      : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>className : string | undefined
>          : ^^^^^^^^^^^^^^^^^^
>htmlFor : string | undefined
>        : ^^^^^^^^^^^^^^^^^^

    return null!;
>null! : never
>      : ^^^^^
}
class MyComp extends React.Component<{ className?: string, htmlFor?: string }> { }
>MyComp : MyComp
>       : ^^^^^^
>React.Component : React.Component<{ className?: string | undefined; htmlFor?: string | undefined; }, {}, any>
>                : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>React : typeof React
>      : ^^^^^^^^^^^^
>Component : typeof React.Component
>          : ^^^^^^^^^^^^^^^^^^^^^^
>className : string | undefined
>          : ^^^^^^^^^^^^^^^^^^
>htmlFor : string | undefined
>        : ^^^^^^^^^^^^^^^^^^

<a class="" />;
><a class="" /> : JSX.Element
>               : ^^^^^^^^^^^
>a : any
>  : ^^^
>class : string
>      : ^^^^^^

<a for="" />; // should have no fix
><a for="" /> : JSX.Element
>             : ^^^^^^^^^^^
>a : any
>  : ^^^
>for : string
>    : ^^^^^^

<label for="" />;
><label for="" /> : JSX.Element
>                 : ^^^^^^^^^^^
>label : any
>      : ^^^
>for : string
>    : ^^^^^^

<label for="" class="" />;
><label for="" class="" /> : JSX.Element
>                          : ^^^^^^^^^^^
>label : any
>      : ^^^
>for : string
>    : ^^^^^^
>class : string
>      : ^^^^^^

<MyComp class="" />;
><MyComp class="" /> : JSX.Element
>                    : ^^^^^^^^^^^
>MyComp : typeof MyComp
>       : ^^^^^^^^^^^^^
>class : string
>      : ^^^^^^

<MyComp2 class="" />;
><MyComp2 class="" /> : JSX.Element
>                     : ^^^^^^^^^^^
>MyComp2 : (props: { className?: string | undefined; htmlFor?: string | undefined; }) => never
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>class : string
>      : ^^^^^^

<MyComp for="" />;
><MyComp for="" /> : JSX.Element
>                  : ^^^^^^^^^^^
>MyComp : typeof MyComp
>       : ^^^^^^^^^^^^^
>for : string
>    : ^^^^^^

<MyComp2 for="" />;
><MyComp2 for="" /> : JSX.Element
>                   : ^^^^^^^^^^^
>MyComp2 : (props: { className?: string | undefined; htmlFor?: string | undefined; }) => never
>        : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>for : string
>    : ^^^^^^

