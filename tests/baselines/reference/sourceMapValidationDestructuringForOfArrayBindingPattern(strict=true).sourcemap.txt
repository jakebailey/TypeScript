===================================================================
JsFile: sourceMapValidationDestructuringForOfArrayBindingPattern.js
mapUrl: sourceMapValidationDestructuringForOfArrayBindingPattern.js.map
sourceRoot: 
sources: sourceMapValidationDestructuringForOfArrayBindingPattern.ts
===================================================================
-------------------------------------------------------------------
emittedFile:sourceMapValidationDestructuringForOfArrayBindingPattern.js
sourceFile:sourceMapValidationDestructuringForOfArrayBindingPattern.ts
-------------------------------------------------------------------
>>>"use strict";
>>>var robotA = [1, "mower", "mowing"];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^
9 >                        ^^
10>                          ^^^^^^^^
11>                                  ^
12>                                   ^
13>                                    ^^^^^->
1 >declare var console: {
  >    log(msg: any): void;
  >}
  >type Robot = [number, string, string];
  >type MultiSkilledRobot = [string, [string, string]];
  >
  >
2 >let 
3 >    robotA
4 >          : Robot = 
5 >             [
6 >              1
7 >               , 
8 >                 "mower"
9 >                        , 
10>                          "mowing"
11>                                  ]
12>                                   ;
1 >Emitted(2, 1) Source(7, 1) + SourceIndex(0)
2 >Emitted(2, 5) Source(7, 5) + SourceIndex(0)
3 >Emitted(2, 11) Source(7, 11) + SourceIndex(0)
4 >Emitted(2, 14) Source(7, 21) + SourceIndex(0)
5 >Emitted(2, 15) Source(7, 22) + SourceIndex(0)
6 >Emitted(2, 16) Source(7, 23) + SourceIndex(0)
7 >Emitted(2, 18) Source(7, 25) + SourceIndex(0)
8 >Emitted(2, 25) Source(7, 32) + SourceIndex(0)
9 >Emitted(2, 27) Source(7, 34) + SourceIndex(0)
10>Emitted(2, 35) Source(7, 42) + SourceIndex(0)
11>Emitted(2, 36) Source(7, 43) + SourceIndex(0)
12>Emitted(2, 37) Source(7, 44) + SourceIndex(0)
---
>>>var robotB = [2, "trimmer", "trimming"];
1->
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^
7 >               ^^
8 >                 ^^^^^^^^^
9 >                          ^^
10>                            ^^^^^^^^^^
11>                                      ^
12>                                       ^
1->
  >
2 >let 
3 >    robotB
4 >          : Robot = 
5 >             [
6 >              2
7 >               , 
8 >                 "trimmer"
9 >                          , 
10>                            "trimming"
11>                                      ]
12>                                       ;
1->Emitted(3, 1) Source(8, 1) + SourceIndex(0)
2 >Emitted(3, 5) Source(8, 5) + SourceIndex(0)
3 >Emitted(3, 11) Source(8, 11) + SourceIndex(0)
4 >Emitted(3, 14) Source(8, 21) + SourceIndex(0)
5 >Emitted(3, 15) Source(8, 22) + SourceIndex(0)
6 >Emitted(3, 16) Source(8, 23) + SourceIndex(0)
7 >Emitted(3, 18) Source(8, 25) + SourceIndex(0)
8 >Emitted(3, 27) Source(8, 34) + SourceIndex(0)
9 >Emitted(3, 29) Source(8, 36) + SourceIndex(0)
10>Emitted(3, 39) Source(8, 46) + SourceIndex(0)
11>Emitted(3, 40) Source(8, 47) + SourceIndex(0)
12>Emitted(3, 41) Source(8, 48) + SourceIndex(0)
---
>>>var robots = [robotA, robotB];
1 >
2 >^^^^
3 >    ^^^^^^
4 >          ^^^
5 >             ^
6 >              ^^^^^^
7 >                    ^^
8 >                      ^^^^^^
9 >                            ^
10>                             ^
1 >
  >
2 >let 
3 >    robots
4 >           = 
5 >             [
6 >              robotA
7 >                    , 
8 >                      robotB
9 >                            ]
10>                             ;
1 >Emitted(4, 1) Source(9, 1) + SourceIndex(0)
2 >Emitted(4, 5) Source(9, 5) + SourceIndex(0)
3 >Emitted(4, 11) Source(9, 11) + SourceIndex(0)
4 >Emitted(4, 14) Source(9, 14) + SourceIndex(0)
5 >Emitted(4, 15) Source(9, 15) + SourceIndex(0)
6 >Emitted(4, 21) Source(9, 21) + SourceIndex(0)
7 >Emitted(4, 23) Source(9, 23) + SourceIndex(0)
8 >Emitted(4, 29) Source(9, 29) + SourceIndex(0)
9 >Emitted(4, 30) Source(9, 30) + SourceIndex(0)
10>Emitted(4, 31) Source(9, 31) + SourceIndex(0)
---
>>>function getRobots() {
1 >
2 >^^^^^^^^^
3 >         ^^^^^^^^^
4 >                  ^->
1 >
  >
2 >function 
3 >         getRobots
1 >Emitted(5, 1) Source(10, 1) + SourceIndex(0)
2 >Emitted(5, 10) Source(10, 10) + SourceIndex(0)
3 >Emitted(5, 19) Source(10, 19) + SourceIndex(0)
---
>>>    return robots;
1->^^^^
2 >    ^^^^^^^
3 >           ^^^^^^
4 >                 ^
1->() {
  >    
2 >    return 
3 >           robots
4 >                 ;
1->Emitted(6, 5) Source(11, 5) + SourceIndex(0)
2 >Emitted(6, 12) Source(11, 12) + SourceIndex(0)
3 >Emitted(6, 18) Source(11, 18) + SourceIndex(0)
4 >Emitted(6, 19) Source(11, 19) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(7, 1) Source(12, 1) + SourceIndex(0)
2 >Emitted(7, 2) Source(12, 2) + SourceIndex(0)
---
>>>var multiRobotA = ["mower", ["mowing", ""]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^
7 >                          ^^
8 >                            ^
9 >                             ^^^^^^^^
10>                                     ^^
11>                                       ^^
12>                                         ^
13>                                          ^
14>                                           ^
15>                                            ^^^^^^^^^^^->
1->
  >
  >
2 >let 
3 >    multiRobotA
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "mower"
7 >                          , 
8 >                            [
9 >                             "mowing"
10>                                     , 
11>                                       ""
12>                                         ]
13>                                          ]
14>                                           ;
1->Emitted(8, 1) Source(14, 1) + SourceIndex(0)
2 >Emitted(8, 5) Source(14, 5) + SourceIndex(0)
3 >Emitted(8, 16) Source(14, 16) + SourceIndex(0)
4 >Emitted(8, 19) Source(14, 38) + SourceIndex(0)
5 >Emitted(8, 20) Source(14, 39) + SourceIndex(0)
6 >Emitted(8, 27) Source(14, 46) + SourceIndex(0)
7 >Emitted(8, 29) Source(14, 48) + SourceIndex(0)
8 >Emitted(8, 30) Source(14, 49) + SourceIndex(0)
9 >Emitted(8, 38) Source(14, 57) + SourceIndex(0)
10>Emitted(8, 40) Source(14, 59) + SourceIndex(0)
11>Emitted(8, 42) Source(14, 61) + SourceIndex(0)
12>Emitted(8, 43) Source(14, 62) + SourceIndex(0)
13>Emitted(8, 44) Source(14, 63) + SourceIndex(0)
14>Emitted(8, 45) Source(14, 64) + SourceIndex(0)
---
>>>var multiRobotB = ["trimmer", ["trimming", "edging"]];
1->
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^
7 >                            ^^
8 >                              ^
9 >                               ^^^^^^^^^^
10>                                         ^^
11>                                           ^^^^^^^^
12>                                                   ^
13>                                                    ^
14>                                                     ^
1->
  >
2 >let 
3 >    multiRobotB
4 >               : MultiSkilledRobot = 
5 >                  [
6 >                   "trimmer"
7 >                            , 
8 >                              [
9 >                               "trimming"
10>                                         , 
11>                                           "edging"
12>                                                   ]
13>                                                    ]
14>                                                     ;
1->Emitted(9, 1) Source(15, 1) + SourceIndex(0)
2 >Emitted(9, 5) Source(15, 5) + SourceIndex(0)
3 >Emitted(9, 16) Source(15, 16) + SourceIndex(0)
4 >Emitted(9, 19) Source(15, 38) + SourceIndex(0)
5 >Emitted(9, 20) Source(15, 39) + SourceIndex(0)
6 >Emitted(9, 29) Source(15, 48) + SourceIndex(0)
7 >Emitted(9, 31) Source(15, 50) + SourceIndex(0)
8 >Emitted(9, 32) Source(15, 51) + SourceIndex(0)
9 >Emitted(9, 42) Source(15, 61) + SourceIndex(0)
10>Emitted(9, 44) Source(15, 63) + SourceIndex(0)
11>Emitted(9, 52) Source(15, 71) + SourceIndex(0)
12>Emitted(9, 53) Source(15, 72) + SourceIndex(0)
13>Emitted(9, 54) Source(15, 73) + SourceIndex(0)
14>Emitted(9, 55) Source(15, 74) + SourceIndex(0)
---
>>>var multiRobots = [multiRobotA, multiRobotB];
1 >
2 >^^^^
3 >    ^^^^^^^^^^^
4 >               ^^^
5 >                  ^
6 >                   ^^^^^^^^^^^
7 >                              ^^
8 >                                ^^^^^^^^^^^
9 >                                           ^
10>                                            ^
1 >
  >
2 >let 
3 >    multiRobots
4 >                = 
5 >                  [
6 >                   multiRobotA
7 >                              , 
8 >                                multiRobotB
9 >                                           ]
10>                                            ;
1 >Emitted(10, 1) Source(16, 1) + SourceIndex(0)
2 >Emitted(10, 5) Source(16, 5) + SourceIndex(0)
3 >Emitted(10, 16) Source(16, 16) + SourceIndex(0)
4 >Emitted(10, 19) Source(16, 19) + SourceIndex(0)
5 >Emitted(10, 20) Source(16, 20) + SourceIndex(0)
6 >Emitted(10, 31) Source(16, 31) + SourceIndex(0)
7 >Emitted(10, 33) Source(16, 33) + SourceIndex(0)
8 >Emitted(10, 44) Source(16, 44) + SourceIndex(0)
9 >Emitted(10, 45) Source(16, 45) + SourceIndex(0)
10>Emitted(10, 46) Source(16, 46) + SourceIndex(0)
---
>>>function getMultiRobots() {
1 >
2 >^^^^^^^^^
3 >         ^^^^^^^^^^^^^^
4 >                       ^->
1 >
  >
2 >function 
3 >         getMultiRobots
1 >Emitted(11, 1) Source(17, 1) + SourceIndex(0)
2 >Emitted(11, 10) Source(17, 10) + SourceIndex(0)
3 >Emitted(11, 24) Source(17, 24) + SourceIndex(0)
---
>>>    return multiRobots;
1->^^^^
2 >    ^^^^^^^
3 >           ^^^^^^^^^^^
4 >                      ^
1->() {
  >    
2 >    return 
3 >           multiRobots
4 >                      ;
1->Emitted(12, 5) Source(18, 5) + SourceIndex(0)
2 >Emitted(12, 12) Source(18, 12) + SourceIndex(0)
3 >Emitted(12, 23) Source(18, 23) + SourceIndex(0)
4 >Emitted(12, 24) Source(18, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(13, 1) Source(19, 1) + SourceIndex(0)
2 >Emitted(13, 2) Source(19, 2) + SourceIndex(0)
---
>>>for (var _i = 0, robots_1 = robots; _i < robots_1.length; _i++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^^^^^^^^^^^
6 >                                  ^^
7 >                                    ^^^^^^^^^^^^^^^^^^^^
8 >                                                        ^^
9 >                                                          ^^^^
10>                                                              ^^
11>                                                                ^
1->
  >
  >
2 >for (let [, nameA] of 
3 >     robots
4 >               
5 >                 robots
6 >                                  
7 >                                    robots
8 >                                                        
9 >                                                          robots
10>                                                              ) 
11>                                                                {
1->Emitted(14, 1) Source(21, 1) + SourceIndex(0)
2 >Emitted(14, 6) Source(21, 23) + SourceIndex(0)
3 >Emitted(14, 16) Source(21, 29) + SourceIndex(0)
4 >Emitted(14, 18) Source(21, 23) + SourceIndex(0)
5 >Emitted(14, 35) Source(21, 29) + SourceIndex(0)
6 >Emitted(14, 37) Source(21, 23) + SourceIndex(0)
7 >Emitted(14, 57) Source(21, 29) + SourceIndex(0)
8 >Emitted(14, 59) Source(21, 23) + SourceIndex(0)
9 >Emitted(14, 63) Source(21, 29) + SourceIndex(0)
10>Emitted(14, 65) Source(21, 31) + SourceIndex(0)
11>Emitted(14, 66) Source(21, 32) + SourceIndex(0)
---
>>>    var _a = robots_1[_i], nameA = _a[1];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^
4 >                         ^^
5 >                           ^^^^^
6 >                                ^^^^^^^^
1 >
2 >    
3 >        [, nameA]
4 >                         
5 >                           nameA
6 >                                
1 >Emitted(15, 5) Source(21, 10) + SourceIndex(0)
2 >Emitted(15, 9) Source(21, 10) + SourceIndex(0)
3 >Emitted(15, 26) Source(21, 19) + SourceIndex(0)
4 >Emitted(15, 28) Source(21, 13) + SourceIndex(0)
5 >Emitted(15, 33) Source(21, 18) + SourceIndex(0)
6 >Emitted(15, 41) Source(21, 18) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of robots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(16, 5) Source(22, 5) + SourceIndex(0)
2 >Emitted(16, 12) Source(22, 12) + SourceIndex(0)
3 >Emitted(16, 13) Source(22, 13) + SourceIndex(0)
4 >Emitted(16, 16) Source(22, 16) + SourceIndex(0)
5 >Emitted(16, 17) Source(22, 17) + SourceIndex(0)
6 >Emitted(16, 22) Source(22, 22) + SourceIndex(0)
7 >Emitted(16, 23) Source(22, 23) + SourceIndex(0)
8 >Emitted(16, 24) Source(22, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(17, 1) Source(23, 1) + SourceIndex(0)
2 >Emitted(17, 2) Source(23, 2) + SourceIndex(0)
---
>>>for (var _b = 0, _c = getRobots(); _b < _c.length; _b++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^
6 >                      ^^^^^^^^^
7 >                               ^^
8 >                                 ^^
9 >                                   ^^^^^^^^^^^^^^
10>                                                 ^^
11>                                                   ^^^^
12>                                                       ^^
13>                                                         ^
1->
  >
2 >for (let [, nameA] of 
3 >     getRobots()
4 >               
5 >                 
6 >                      getRobots
7 >                               ()
8 >                                 
9 >                                   getRobots()
10>                                                 
11>                                                   getRobots()
12>                                                       ) 
13>                                                         {
1->Emitted(18, 1) Source(24, 1) + SourceIndex(0)
2 >Emitted(18, 6) Source(24, 23) + SourceIndex(0)
3 >Emitted(18, 16) Source(24, 34) + SourceIndex(0)
4 >Emitted(18, 18) Source(24, 23) + SourceIndex(0)
5 >Emitted(18, 23) Source(24, 23) + SourceIndex(0)
6 >Emitted(18, 32) Source(24, 32) + SourceIndex(0)
7 >Emitted(18, 34) Source(24, 34) + SourceIndex(0)
8 >Emitted(18, 36) Source(24, 23) + SourceIndex(0)
9 >Emitted(18, 50) Source(24, 34) + SourceIndex(0)
10>Emitted(18, 52) Source(24, 23) + SourceIndex(0)
11>Emitted(18, 56) Source(24, 34) + SourceIndex(0)
12>Emitted(18, 58) Source(24, 36) + SourceIndex(0)
13>Emitted(18, 59) Source(24, 37) + SourceIndex(0)
---
>>>    var _d = _c[_b], nameA = _d[1];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^
6 >                          ^^^^^^^^
1 >
2 >    
3 >        [, nameA]
4 >                   
5 >                     nameA
6 >                          
1 >Emitted(19, 5) Source(24, 10) + SourceIndex(0)
2 >Emitted(19, 9) Source(24, 10) + SourceIndex(0)
3 >Emitted(19, 20) Source(24, 19) + SourceIndex(0)
4 >Emitted(19, 22) Source(24, 13) + SourceIndex(0)
5 >Emitted(19, 27) Source(24, 18) + SourceIndex(0)
6 >Emitted(19, 35) Source(24, 18) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of getRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(20, 5) Source(25, 5) + SourceIndex(0)
2 >Emitted(20, 12) Source(25, 12) + SourceIndex(0)
3 >Emitted(20, 13) Source(25, 13) + SourceIndex(0)
4 >Emitted(20, 16) Source(25, 16) + SourceIndex(0)
5 >Emitted(20, 17) Source(25, 17) + SourceIndex(0)
6 >Emitted(20, 22) Source(25, 22) + SourceIndex(0)
7 >Emitted(20, 23) Source(25, 23) + SourceIndex(0)
8 >Emitted(20, 24) Source(25, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(21, 1) Source(26, 1) + SourceIndex(0)
2 >Emitted(21, 2) Source(26, 2) + SourceIndex(0)
---
>>>for (var _e = 0, _f = [robotA, robotB]; _e < _f.length; _e++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^
6 >                       ^^^^^^
7 >                             ^^
8 >                               ^^^^^^
9 >                                     ^
10>                                      ^^
11>                                        ^^^^^^^^^^^^^^
12>                                                      ^^
13>                                                        ^^^^
14>                                                            ^^
15>                                                              ^
1->
  >
2 >for (let [, nameA] of 
3 >     [robotA, robotB]
4 >               
5 >                 [
6 >                       robotA
7 >                             , 
8 >                               robotB
9 >                                     ]
10>                                      
11>                                        [robotA, robotB]
12>                                                      
13>                                                        [robotA, robotB]
14>                                                            ) 
15>                                                              {
1->Emitted(22, 1) Source(27, 1) + SourceIndex(0)
2 >Emitted(22, 6) Source(27, 23) + SourceIndex(0)
3 >Emitted(22, 16) Source(27, 39) + SourceIndex(0)
4 >Emitted(22, 18) Source(27, 23) + SourceIndex(0)
5 >Emitted(22, 24) Source(27, 24) + SourceIndex(0)
6 >Emitted(22, 30) Source(27, 30) + SourceIndex(0)
7 >Emitted(22, 32) Source(27, 32) + SourceIndex(0)
8 >Emitted(22, 38) Source(27, 38) + SourceIndex(0)
9 >Emitted(22, 39) Source(27, 39) + SourceIndex(0)
10>Emitted(22, 41) Source(27, 23) + SourceIndex(0)
11>Emitted(22, 55) Source(27, 39) + SourceIndex(0)
12>Emitted(22, 57) Source(27, 23) + SourceIndex(0)
13>Emitted(22, 61) Source(27, 39) + SourceIndex(0)
14>Emitted(22, 63) Source(27, 41) + SourceIndex(0)
15>Emitted(22, 64) Source(27, 42) + SourceIndex(0)
---
>>>    var _g = _f[_e], nameA = _g[1];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^
6 >                          ^^^^^^^^
1 >
2 >    
3 >        [, nameA]
4 >                   
5 >                     nameA
6 >                          
1 >Emitted(23, 5) Source(27, 10) + SourceIndex(0)
2 >Emitted(23, 9) Source(27, 10) + SourceIndex(0)
3 >Emitted(23, 20) Source(27, 19) + SourceIndex(0)
4 >Emitted(23, 22) Source(27, 13) + SourceIndex(0)
5 >Emitted(23, 27) Source(27, 18) + SourceIndex(0)
6 >Emitted(23, 35) Source(27, 18) + SourceIndex(0)
---
>>>    console.log(nameA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA
7 >                     )
8 >                      ;
1 >Emitted(24, 5) Source(28, 5) + SourceIndex(0)
2 >Emitted(24, 12) Source(28, 12) + SourceIndex(0)
3 >Emitted(24, 13) Source(28, 13) + SourceIndex(0)
4 >Emitted(24, 16) Source(28, 16) + SourceIndex(0)
5 >Emitted(24, 17) Source(28, 17) + SourceIndex(0)
6 >Emitted(24, 22) Source(28, 22) + SourceIndex(0)
7 >Emitted(24, 23) Source(28, 23) + SourceIndex(0)
8 >Emitted(24, 24) Source(28, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(25, 1) Source(29, 1) + SourceIndex(0)
2 >Emitted(25, 2) Source(29, 2) + SourceIndex(0)
---
>>>for (var _h = 0, multiRobots_1 = multiRobots; _h < multiRobots_1.length; _h++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                            ^^
7 >                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                       ^^
9 >                                                                         ^^^^
10>                                                                             ^^
11>                                                                               ^
12>                                                                                ^^^^^^^^^^^^->
1->
  >
2 >for (let [, [primarySkillA, secondarySkillA]] of 
3 >     multiRobots
4 >               
5 >                 multiRobots
6 >                                            
7 >                                              multiRobots
8 >                                                                       
9 >                                                                         multiRobots
10>                                                                             ) 
11>                                                                               {
1->Emitted(26, 1) Source(30, 1) + SourceIndex(0)
2 >Emitted(26, 6) Source(30, 50) + SourceIndex(0)
3 >Emitted(26, 16) Source(30, 61) + SourceIndex(0)
4 >Emitted(26, 18) Source(30, 50) + SourceIndex(0)
5 >Emitted(26, 45) Source(30, 61) + SourceIndex(0)
6 >Emitted(26, 47) Source(30, 50) + SourceIndex(0)
7 >Emitted(26, 72) Source(30, 61) + SourceIndex(0)
8 >Emitted(26, 74) Source(30, 50) + SourceIndex(0)
9 >Emitted(26, 78) Source(30, 61) + SourceIndex(0)
10>Emitted(26, 80) Source(30, 63) + SourceIndex(0)
11>Emitted(26, 81) Source(30, 64) + SourceIndex(0)
---
>>>    var _j = multiRobots_1[_h], _k = _j[1], primarySkillA = _k[0], secondarySkillA = _k[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^
4 >                              ^^
5 >                                ^^^^^^^^^^
6 >                                          ^^
7 >                                            ^^^^^^^^^^^^^
8 >                                                         ^^^^^^^^
9 >                                                                 ^^
10>                                                                   ^^^^^^^^^^^^^^^
11>                                                                                  ^^^^^^^^
1->
2 >    
3 >        [, [primarySkillA, secondarySkillA]]
4 >                              
5 >                                [primarySkillA, secondarySkillA]
6 >                                          
7 >                                            primarySkillA
8 >                                                         
9 >                                                                 , 
10>                                                                   secondarySkillA
11>                                                                                  
1->Emitted(27, 5) Source(30, 10) + SourceIndex(0)
2 >Emitted(27, 9) Source(30, 10) + SourceIndex(0)
3 >Emitted(27, 31) Source(30, 46) + SourceIndex(0)
4 >Emitted(27, 33) Source(30, 13) + SourceIndex(0)
5 >Emitted(27, 43) Source(30, 45) + SourceIndex(0)
6 >Emitted(27, 45) Source(30, 14) + SourceIndex(0)
7 >Emitted(27, 58) Source(30, 27) + SourceIndex(0)
8 >Emitted(27, 66) Source(30, 27) + SourceIndex(0)
9 >Emitted(27, 68) Source(30, 29) + SourceIndex(0)
10>Emitted(27, 83) Source(30, 44) + SourceIndex(0)
11>Emitted(27, 91) Source(30, 44) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >]] of multiRobots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(28, 5) Source(31, 5) + SourceIndex(0)
2 >Emitted(28, 12) Source(31, 12) + SourceIndex(0)
3 >Emitted(28, 13) Source(31, 13) + SourceIndex(0)
4 >Emitted(28, 16) Source(31, 16) + SourceIndex(0)
5 >Emitted(28, 17) Source(31, 17) + SourceIndex(0)
6 >Emitted(28, 30) Source(31, 30) + SourceIndex(0)
7 >Emitted(28, 31) Source(31, 31) + SourceIndex(0)
8 >Emitted(28, 32) Source(31, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(29, 1) Source(32, 1) + SourceIndex(0)
2 >Emitted(29, 2) Source(32, 2) + SourceIndex(0)
---
>>>for (var _l = 0, _m = getMultiRobots(); _l < _m.length; _l++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^
6 >                      ^^^^^^^^^^^^^^
7 >                                    ^^
8 >                                      ^^
9 >                                        ^^^^^^^^^^^^^^
10>                                                      ^^
11>                                                        ^^^^
12>                                                            ^^
13>                                                              ^
14>                                                               ^^^^^^^^^^^^^^^^^^->
1->
  >
2 >for (let [, [primarySkillA, secondarySkillA]] of 
3 >     getMultiRobots()
4 >               
5 >                 
6 >                      getMultiRobots
7 >                                    ()
8 >                                      
9 >                                        getMultiRobots()
10>                                                      
11>                                                        getMultiRobots()
12>                                                            ) 
13>                                                              {
1->Emitted(30, 1) Source(33, 1) + SourceIndex(0)
2 >Emitted(30, 6) Source(33, 50) + SourceIndex(0)
3 >Emitted(30, 16) Source(33, 66) + SourceIndex(0)
4 >Emitted(30, 18) Source(33, 50) + SourceIndex(0)
5 >Emitted(30, 23) Source(33, 50) + SourceIndex(0)
6 >Emitted(30, 37) Source(33, 64) + SourceIndex(0)
7 >Emitted(30, 39) Source(33, 66) + SourceIndex(0)
8 >Emitted(30, 41) Source(33, 50) + SourceIndex(0)
9 >Emitted(30, 55) Source(33, 66) + SourceIndex(0)
10>Emitted(30, 57) Source(33, 50) + SourceIndex(0)
11>Emitted(30, 61) Source(33, 66) + SourceIndex(0)
12>Emitted(30, 63) Source(33, 68) + SourceIndex(0)
13>Emitted(30, 64) Source(33, 69) + SourceIndex(0)
---
>>>    var _o = _m[_l], _p = _o[1], primarySkillA = _p[0], secondarySkillA = _p[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^^^^^^
6 >                               ^^
7 >                                 ^^^^^^^^^^^^^
8 >                                              ^^^^^^^^
9 >                                                      ^^
10>                                                        ^^^^^^^^^^^^^^^
11>                                                                       ^^^^^^^^
1->
2 >    
3 >        [, [primarySkillA, secondarySkillA]]
4 >                   
5 >                     [primarySkillA, secondarySkillA]
6 >                               
7 >                                 primarySkillA
8 >                                              
9 >                                                      , 
10>                                                        secondarySkillA
11>                                                                       
1->Emitted(31, 5) Source(33, 10) + SourceIndex(0)
2 >Emitted(31, 9) Source(33, 10) + SourceIndex(0)
3 >Emitted(31, 20) Source(33, 46) + SourceIndex(0)
4 >Emitted(31, 22) Source(33, 13) + SourceIndex(0)
5 >Emitted(31, 32) Source(33, 45) + SourceIndex(0)
6 >Emitted(31, 34) Source(33, 14) + SourceIndex(0)
7 >Emitted(31, 47) Source(33, 27) + SourceIndex(0)
8 >Emitted(31, 55) Source(33, 27) + SourceIndex(0)
9 >Emitted(31, 57) Source(33, 29) + SourceIndex(0)
10>Emitted(31, 72) Source(33, 44) + SourceIndex(0)
11>Emitted(31, 80) Source(33, 44) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >]] of getMultiRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(32, 5) Source(34, 5) + SourceIndex(0)
2 >Emitted(32, 12) Source(34, 12) + SourceIndex(0)
3 >Emitted(32, 13) Source(34, 13) + SourceIndex(0)
4 >Emitted(32, 16) Source(34, 16) + SourceIndex(0)
5 >Emitted(32, 17) Source(34, 17) + SourceIndex(0)
6 >Emitted(32, 30) Source(34, 30) + SourceIndex(0)
7 >Emitted(32, 31) Source(34, 31) + SourceIndex(0)
8 >Emitted(32, 32) Source(34, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(33, 1) Source(35, 1) + SourceIndex(0)
2 >Emitted(33, 2) Source(35, 2) + SourceIndex(0)
---
>>>for (var _q = 0, _r = [multiRobotA, multiRobotB]; _q < _r.length; _q++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^
6 >                       ^^^^^^^^^^^
7 >                                  ^^
8 >                                    ^^^^^^^^^^^
9 >                                               ^
10>                                                ^^
11>                                                  ^^^^^^^^^^^^^^
12>                                                                ^^
13>                                                                  ^^^^
14>                                                                      ^^
15>                                                                        ^
16>                                                                         ^^^^^^^^->
1->
  >
2 >for (let [, [primarySkillA, secondarySkillA]] of 
3 >     [multiRobotA, multiRobotB]
4 >               
5 >                 [
6 >                       multiRobotA
7 >                                  , 
8 >                                    multiRobotB
9 >                                               ]
10>                                                
11>                                                  [multiRobotA, multiRobotB]
12>                                                                
13>                                                                  [multiRobotA, multiRobotB]
14>                                                                      ) 
15>                                                                        {
1->Emitted(34, 1) Source(36, 1) + SourceIndex(0)
2 >Emitted(34, 6) Source(36, 50) + SourceIndex(0)
3 >Emitted(34, 16) Source(36, 76) + SourceIndex(0)
4 >Emitted(34, 18) Source(36, 50) + SourceIndex(0)
5 >Emitted(34, 24) Source(36, 51) + SourceIndex(0)
6 >Emitted(34, 35) Source(36, 62) + SourceIndex(0)
7 >Emitted(34, 37) Source(36, 64) + SourceIndex(0)
8 >Emitted(34, 48) Source(36, 75) + SourceIndex(0)
9 >Emitted(34, 49) Source(36, 76) + SourceIndex(0)
10>Emitted(34, 51) Source(36, 50) + SourceIndex(0)
11>Emitted(34, 65) Source(36, 76) + SourceIndex(0)
12>Emitted(34, 67) Source(36, 50) + SourceIndex(0)
13>Emitted(34, 71) Source(36, 76) + SourceIndex(0)
14>Emitted(34, 73) Source(36, 78) + SourceIndex(0)
15>Emitted(34, 74) Source(36, 79) + SourceIndex(0)
---
>>>    var _s = _r[_q], _t = _s[1], primarySkillA = _t[0], secondarySkillA = _t[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^^^^^^
6 >                               ^^
7 >                                 ^^^^^^^^^^^^^
8 >                                              ^^^^^^^^
9 >                                                      ^^
10>                                                        ^^^^^^^^^^^^^^^
11>                                                                       ^^^^^^^^
1->
2 >    
3 >        [, [primarySkillA, secondarySkillA]]
4 >                   
5 >                     [primarySkillA, secondarySkillA]
6 >                               
7 >                                 primarySkillA
8 >                                              
9 >                                                      , 
10>                                                        secondarySkillA
11>                                                                       
1->Emitted(35, 5) Source(36, 10) + SourceIndex(0)
2 >Emitted(35, 9) Source(36, 10) + SourceIndex(0)
3 >Emitted(35, 20) Source(36, 46) + SourceIndex(0)
4 >Emitted(35, 22) Source(36, 13) + SourceIndex(0)
5 >Emitted(35, 32) Source(36, 45) + SourceIndex(0)
6 >Emitted(35, 34) Source(36, 14) + SourceIndex(0)
7 >Emitted(35, 47) Source(36, 27) + SourceIndex(0)
8 >Emitted(35, 55) Source(36, 27) + SourceIndex(0)
9 >Emitted(35, 57) Source(36, 29) + SourceIndex(0)
10>Emitted(35, 72) Source(36, 44) + SourceIndex(0)
11>Emitted(35, 80) Source(36, 44) + SourceIndex(0)
---
>>>    console.log(primarySkillA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^
7 >                             ^
8 >                              ^
1 >]] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                primarySkillA
7 >                             )
8 >                              ;
1 >Emitted(36, 5) Source(37, 5) + SourceIndex(0)
2 >Emitted(36, 12) Source(37, 12) + SourceIndex(0)
3 >Emitted(36, 13) Source(37, 13) + SourceIndex(0)
4 >Emitted(36, 16) Source(37, 16) + SourceIndex(0)
5 >Emitted(36, 17) Source(37, 17) + SourceIndex(0)
6 >Emitted(36, 30) Source(37, 30) + SourceIndex(0)
7 >Emitted(36, 31) Source(37, 31) + SourceIndex(0)
8 >Emitted(36, 32) Source(37, 32) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(37, 1) Source(38, 1) + SourceIndex(0)
2 >Emitted(37, 2) Source(38, 2) + SourceIndex(0)
---
>>>for (var _u = 0, robots_2 = robots; _u < robots_2.length; _u++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^^^^^^^^^^^
6 >                                  ^^
7 >                                    ^^^^^^^^^^^^^^^^^^^^
8 >                                                        ^^
9 >                                                          ^^^^
10>                                                              ^^
11>                                                                ^
1->
  >
  >
2 >for (let [numberB] of 
3 >     robots
4 >               
5 >                 robots
6 >                                  
7 >                                    robots
8 >                                                        
9 >                                                          robots
10>                                                              ) 
11>                                                                {
1->Emitted(38, 1) Source(40, 1) + SourceIndex(0)
2 >Emitted(38, 6) Source(40, 23) + SourceIndex(0)
3 >Emitted(38, 16) Source(40, 29) + SourceIndex(0)
4 >Emitted(38, 18) Source(40, 23) + SourceIndex(0)
5 >Emitted(38, 35) Source(40, 29) + SourceIndex(0)
6 >Emitted(38, 37) Source(40, 23) + SourceIndex(0)
7 >Emitted(38, 57) Source(40, 29) + SourceIndex(0)
8 >Emitted(38, 59) Source(40, 23) + SourceIndex(0)
9 >Emitted(38, 63) Source(40, 29) + SourceIndex(0)
10>Emitted(38, 65) Source(40, 31) + SourceIndex(0)
11>Emitted(38, 66) Source(40, 32) + SourceIndex(0)
---
>>>    var numberB = robots_2[_u][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^
4 >               ^^^^^^^^^^^^^^^^^^
1 >
2 >    
3 >        numberB
4 >               
1 >Emitted(39, 5) Source(40, 11) + SourceIndex(0)
2 >Emitted(39, 9) Source(40, 11) + SourceIndex(0)
3 >Emitted(39, 16) Source(40, 18) + SourceIndex(0)
4 >Emitted(39, 34) Source(40, 18) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >] of robots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(40, 5) Source(41, 5) + SourceIndex(0)
2 >Emitted(40, 12) Source(41, 12) + SourceIndex(0)
3 >Emitted(40, 13) Source(41, 13) + SourceIndex(0)
4 >Emitted(40, 16) Source(41, 16) + SourceIndex(0)
5 >Emitted(40, 17) Source(41, 17) + SourceIndex(0)
6 >Emitted(40, 24) Source(41, 24) + SourceIndex(0)
7 >Emitted(40, 25) Source(41, 25) + SourceIndex(0)
8 >Emitted(40, 26) Source(41, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(41, 1) Source(42, 1) + SourceIndex(0)
2 >Emitted(41, 2) Source(42, 2) + SourceIndex(0)
---
>>>for (var _v = 0, _w = getRobots(); _v < _w.length; _v++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^
6 >                      ^^^^^^^^^
7 >                               ^^
8 >                                 ^^
9 >                                   ^^^^^^^^^^^^^^
10>                                                 ^^
11>                                                   ^^^^
12>                                                       ^^
13>                                                         ^
1->
  >
2 >for (let [numberB] of 
3 >     getRobots()
4 >               
5 >                 
6 >                      getRobots
7 >                               ()
8 >                                 
9 >                                   getRobots()
10>                                                 
11>                                                   getRobots()
12>                                                       ) 
13>                                                         {
1->Emitted(42, 1) Source(43, 1) + SourceIndex(0)
2 >Emitted(42, 6) Source(43, 23) + SourceIndex(0)
3 >Emitted(42, 16) Source(43, 34) + SourceIndex(0)
4 >Emitted(42, 18) Source(43, 23) + SourceIndex(0)
5 >Emitted(42, 23) Source(43, 23) + SourceIndex(0)
6 >Emitted(42, 32) Source(43, 32) + SourceIndex(0)
7 >Emitted(42, 34) Source(43, 34) + SourceIndex(0)
8 >Emitted(42, 36) Source(43, 23) + SourceIndex(0)
9 >Emitted(42, 50) Source(43, 34) + SourceIndex(0)
10>Emitted(42, 52) Source(43, 23) + SourceIndex(0)
11>Emitted(42, 56) Source(43, 34) + SourceIndex(0)
12>Emitted(42, 58) Source(43, 36) + SourceIndex(0)
13>Emitted(42, 59) Source(43, 37) + SourceIndex(0)
---
>>>    var numberB = _w[_v][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^
4 >               ^^^^^^^^^^^^
1 >
2 >    
3 >        numberB
4 >               
1 >Emitted(43, 5) Source(43, 11) + SourceIndex(0)
2 >Emitted(43, 9) Source(43, 11) + SourceIndex(0)
3 >Emitted(43, 16) Source(43, 18) + SourceIndex(0)
4 >Emitted(43, 28) Source(43, 18) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >] of getRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(44, 5) Source(44, 5) + SourceIndex(0)
2 >Emitted(44, 12) Source(44, 12) + SourceIndex(0)
3 >Emitted(44, 13) Source(44, 13) + SourceIndex(0)
4 >Emitted(44, 16) Source(44, 16) + SourceIndex(0)
5 >Emitted(44, 17) Source(44, 17) + SourceIndex(0)
6 >Emitted(44, 24) Source(44, 24) + SourceIndex(0)
7 >Emitted(44, 25) Source(44, 25) + SourceIndex(0)
8 >Emitted(44, 26) Source(44, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(45, 1) Source(45, 1) + SourceIndex(0)
2 >Emitted(45, 2) Source(45, 2) + SourceIndex(0)
---
>>>for (var _x = 0, _y = [robotA, robotB]; _x < _y.length; _x++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^
6 >                       ^^^^^^
7 >                             ^^
8 >                               ^^^^^^
9 >                                     ^
10>                                      ^^
11>                                        ^^^^^^^^^^^^^^
12>                                                      ^^
13>                                                        ^^^^
14>                                                            ^^
15>                                                              ^
1->
  >
2 >for (let [numberB] of 
3 >     [robotA, robotB]
4 >               
5 >                 [
6 >                       robotA
7 >                             , 
8 >                               robotB
9 >                                     ]
10>                                      
11>                                        [robotA, robotB]
12>                                                      
13>                                                        [robotA, robotB]
14>                                                            ) 
15>                                                              {
1->Emitted(46, 1) Source(46, 1) + SourceIndex(0)
2 >Emitted(46, 6) Source(46, 23) + SourceIndex(0)
3 >Emitted(46, 16) Source(46, 39) + SourceIndex(0)
4 >Emitted(46, 18) Source(46, 23) + SourceIndex(0)
5 >Emitted(46, 24) Source(46, 24) + SourceIndex(0)
6 >Emitted(46, 30) Source(46, 30) + SourceIndex(0)
7 >Emitted(46, 32) Source(46, 32) + SourceIndex(0)
8 >Emitted(46, 38) Source(46, 38) + SourceIndex(0)
9 >Emitted(46, 39) Source(46, 39) + SourceIndex(0)
10>Emitted(46, 41) Source(46, 23) + SourceIndex(0)
11>Emitted(46, 55) Source(46, 39) + SourceIndex(0)
12>Emitted(46, 57) Source(46, 23) + SourceIndex(0)
13>Emitted(46, 61) Source(46, 39) + SourceIndex(0)
14>Emitted(46, 63) Source(46, 41) + SourceIndex(0)
15>Emitted(46, 64) Source(46, 42) + SourceIndex(0)
---
>>>    var numberB = _y[_x][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^
4 >               ^^^^^^^^^^^^
1 >
2 >    
3 >        numberB
4 >               
1 >Emitted(47, 5) Source(46, 11) + SourceIndex(0)
2 >Emitted(47, 9) Source(46, 11) + SourceIndex(0)
3 >Emitted(47, 16) Source(46, 18) + SourceIndex(0)
4 >Emitted(47, 28) Source(46, 18) + SourceIndex(0)
---
>>>    console.log(numberB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^
7 >                       ^
8 >                        ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberB
7 >                       )
8 >                        ;
1 >Emitted(48, 5) Source(47, 5) + SourceIndex(0)
2 >Emitted(48, 12) Source(47, 12) + SourceIndex(0)
3 >Emitted(48, 13) Source(47, 13) + SourceIndex(0)
4 >Emitted(48, 16) Source(47, 16) + SourceIndex(0)
5 >Emitted(48, 17) Source(47, 17) + SourceIndex(0)
6 >Emitted(48, 24) Source(47, 24) + SourceIndex(0)
7 >Emitted(48, 25) Source(47, 25) + SourceIndex(0)
8 >Emitted(48, 26) Source(47, 26) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(49, 1) Source(48, 1) + SourceIndex(0)
2 >Emitted(49, 2) Source(48, 2) + SourceIndex(0)
---
>>>for (var _z = 0, multiRobots_2 = multiRobots; _z < multiRobots_2.length; _z++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                            ^^
7 >                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                       ^^
9 >                                                                         ^^^^
10>                                                                             ^^
11>                                                                               ^
1->
  >
2 >for (let [nameB] of 
3 >     multiRobots
4 >               
5 >                 multiRobots
6 >                                            
7 >                                              multiRobots
8 >                                                                       
9 >                                                                         multiRobots
10>                                                                             ) 
11>                                                                               {
1->Emitted(50, 1) Source(49, 1) + SourceIndex(0)
2 >Emitted(50, 6) Source(49, 21) + SourceIndex(0)
3 >Emitted(50, 16) Source(49, 32) + SourceIndex(0)
4 >Emitted(50, 18) Source(49, 21) + SourceIndex(0)
5 >Emitted(50, 45) Source(49, 32) + SourceIndex(0)
6 >Emitted(50, 47) Source(49, 21) + SourceIndex(0)
7 >Emitted(50, 72) Source(49, 32) + SourceIndex(0)
8 >Emitted(50, 74) Source(49, 21) + SourceIndex(0)
9 >Emitted(50, 78) Source(49, 32) + SourceIndex(0)
10>Emitted(50, 80) Source(49, 34) + SourceIndex(0)
11>Emitted(50, 81) Source(49, 35) + SourceIndex(0)
---
>>>    var nameB = multiRobots_2[_z][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^
4 >             ^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >    
3 >        nameB
4 >             
1 >Emitted(51, 5) Source(49, 11) + SourceIndex(0)
2 >Emitted(51, 9) Source(49, 11) + SourceIndex(0)
3 >Emitted(51, 14) Source(49, 16) + SourceIndex(0)
4 >Emitted(51, 37) Source(49, 16) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of multiRobots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(52, 5) Source(50, 5) + SourceIndex(0)
2 >Emitted(52, 12) Source(50, 12) + SourceIndex(0)
3 >Emitted(52, 13) Source(50, 13) + SourceIndex(0)
4 >Emitted(52, 16) Source(50, 16) + SourceIndex(0)
5 >Emitted(52, 17) Source(50, 17) + SourceIndex(0)
6 >Emitted(52, 22) Source(50, 22) + SourceIndex(0)
7 >Emitted(52, 23) Source(50, 23) + SourceIndex(0)
8 >Emitted(52, 24) Source(50, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(53, 1) Source(51, 1) + SourceIndex(0)
2 >Emitted(53, 2) Source(51, 2) + SourceIndex(0)
---
>>>for (var _0 = 0, _1 = getMultiRobots(); _0 < _1.length; _0++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^
6 >                      ^^^^^^^^^^^^^^
7 >                                    ^^
8 >                                      ^^
9 >                                        ^^^^^^^^^^^^^^
10>                                                      ^^
11>                                                        ^^^^
12>                                                            ^^
13>                                                              ^
1->
  >
2 >for (let [nameB] of 
3 >     getMultiRobots()
4 >               
5 >                 
6 >                      getMultiRobots
7 >                                    ()
8 >                                      
9 >                                        getMultiRobots()
10>                                                      
11>                                                        getMultiRobots()
12>                                                            ) 
13>                                                              {
1->Emitted(54, 1) Source(52, 1) + SourceIndex(0)
2 >Emitted(54, 6) Source(52, 21) + SourceIndex(0)
3 >Emitted(54, 16) Source(52, 37) + SourceIndex(0)
4 >Emitted(54, 18) Source(52, 21) + SourceIndex(0)
5 >Emitted(54, 23) Source(52, 21) + SourceIndex(0)
6 >Emitted(54, 37) Source(52, 35) + SourceIndex(0)
7 >Emitted(54, 39) Source(52, 37) + SourceIndex(0)
8 >Emitted(54, 41) Source(52, 21) + SourceIndex(0)
9 >Emitted(54, 55) Source(52, 37) + SourceIndex(0)
10>Emitted(54, 57) Source(52, 21) + SourceIndex(0)
11>Emitted(54, 61) Source(52, 37) + SourceIndex(0)
12>Emitted(54, 63) Source(52, 39) + SourceIndex(0)
13>Emitted(54, 64) Source(52, 40) + SourceIndex(0)
---
>>>    var nameB = _1[_0][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^
4 >             ^^^^^^^^^^^^
1 >
2 >    
3 >        nameB
4 >             
1 >Emitted(55, 5) Source(52, 11) + SourceIndex(0)
2 >Emitted(55, 9) Source(52, 11) + SourceIndex(0)
3 >Emitted(55, 14) Source(52, 16) + SourceIndex(0)
4 >Emitted(55, 26) Source(52, 16) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of getMultiRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(56, 5) Source(53, 5) + SourceIndex(0)
2 >Emitted(56, 12) Source(53, 12) + SourceIndex(0)
3 >Emitted(56, 13) Source(53, 13) + SourceIndex(0)
4 >Emitted(56, 16) Source(53, 16) + SourceIndex(0)
5 >Emitted(56, 17) Source(53, 17) + SourceIndex(0)
6 >Emitted(56, 22) Source(53, 22) + SourceIndex(0)
7 >Emitted(56, 23) Source(53, 23) + SourceIndex(0)
8 >Emitted(56, 24) Source(53, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(57, 1) Source(54, 1) + SourceIndex(0)
2 >Emitted(57, 2) Source(54, 2) + SourceIndex(0)
---
>>>for (var _2 = 0, _3 = [multiRobotA, multiRobotB]; _2 < _3.length; _2++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^
6 >                       ^^^^^^^^^^^
7 >                                  ^^
8 >                                    ^^^^^^^^^^^
9 >                                               ^
10>                                                ^^
11>                                                  ^^^^^^^^^^^^^^
12>                                                                ^^
13>                                                                  ^^^^
14>                                                                      ^^
15>                                                                        ^
1->
  >
2 >for (let [nameB] of 
3 >     [multiRobotA, multiRobotB]
4 >               
5 >                 [
6 >                       multiRobotA
7 >                                  , 
8 >                                    multiRobotB
9 >                                               ]
10>                                                
11>                                                  [multiRobotA, multiRobotB]
12>                                                                
13>                                                                  [multiRobotA, multiRobotB]
14>                                                                      ) 
15>                                                                        {
1->Emitted(58, 1) Source(55, 1) + SourceIndex(0)
2 >Emitted(58, 6) Source(55, 21) + SourceIndex(0)
3 >Emitted(58, 16) Source(55, 47) + SourceIndex(0)
4 >Emitted(58, 18) Source(55, 21) + SourceIndex(0)
5 >Emitted(58, 24) Source(55, 22) + SourceIndex(0)
6 >Emitted(58, 35) Source(55, 33) + SourceIndex(0)
7 >Emitted(58, 37) Source(55, 35) + SourceIndex(0)
8 >Emitted(58, 48) Source(55, 46) + SourceIndex(0)
9 >Emitted(58, 49) Source(55, 47) + SourceIndex(0)
10>Emitted(58, 51) Source(55, 21) + SourceIndex(0)
11>Emitted(58, 65) Source(55, 47) + SourceIndex(0)
12>Emitted(58, 67) Source(55, 21) + SourceIndex(0)
13>Emitted(58, 71) Source(55, 47) + SourceIndex(0)
14>Emitted(58, 73) Source(55, 49) + SourceIndex(0)
15>Emitted(58, 74) Source(55, 50) + SourceIndex(0)
---
>>>    var nameB = _3[_2][0];
1 >^^^^
2 >    ^^^^
3 >        ^^^^^
4 >             ^^^^^^^^^^^^
1 >
2 >    
3 >        nameB
4 >             
1 >Emitted(59, 5) Source(55, 11) + SourceIndex(0)
2 >Emitted(59, 9) Source(55, 11) + SourceIndex(0)
3 >Emitted(59, 14) Source(55, 16) + SourceIndex(0)
4 >Emitted(59, 26) Source(55, 16) + SourceIndex(0)
---
>>>    console.log(nameB);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^
7 >                     ^
8 >                      ^
1 >] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameB
7 >                     )
8 >                      ;
1 >Emitted(60, 5) Source(56, 5) + SourceIndex(0)
2 >Emitted(60, 12) Source(56, 12) + SourceIndex(0)
3 >Emitted(60, 13) Source(56, 13) + SourceIndex(0)
4 >Emitted(60, 16) Source(56, 16) + SourceIndex(0)
5 >Emitted(60, 17) Source(56, 17) + SourceIndex(0)
6 >Emitted(60, 22) Source(56, 22) + SourceIndex(0)
7 >Emitted(60, 23) Source(56, 23) + SourceIndex(0)
8 >Emitted(60, 24) Source(56, 24) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(61, 1) Source(57, 1) + SourceIndex(0)
2 >Emitted(61, 2) Source(57, 2) + SourceIndex(0)
---
>>>for (var _4 = 0, robots_3 = robots; _4 < robots_3.length; _4++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^^^^^^^^^^^
6 >                                  ^^
7 >                                    ^^^^^^^^^^^^^^^^^^^^
8 >                                                        ^^
9 >                                                          ^^^^
10>                                                              ^^
11>                                                                ^
12>                                                                 ^^^^^^^^^^^^^->
1->
  >
  >
2 >for (let [numberA2, nameA2, skillA2] of 
3 >     robots
4 >               
5 >                 robots
6 >                                  
7 >                                    robots
8 >                                                        
9 >                                                          robots
10>                                                              ) 
11>                                                                {
1->Emitted(62, 1) Source(59, 1) + SourceIndex(0)
2 >Emitted(62, 6) Source(59, 41) + SourceIndex(0)
3 >Emitted(62, 16) Source(59, 47) + SourceIndex(0)
4 >Emitted(62, 18) Source(59, 41) + SourceIndex(0)
5 >Emitted(62, 35) Source(59, 47) + SourceIndex(0)
6 >Emitted(62, 37) Source(59, 41) + SourceIndex(0)
7 >Emitted(62, 57) Source(59, 47) + SourceIndex(0)
8 >Emitted(62, 59) Source(59, 41) + SourceIndex(0)
9 >Emitted(62, 63) Source(59, 47) + SourceIndex(0)
10>Emitted(62, 65) Source(59, 49) + SourceIndex(0)
11>Emitted(62, 66) Source(59, 50) + SourceIndex(0)
---
>>>    var _5 = robots_3[_4], numberA2 = _5[0], nameA2 = _5[1], skillA2 = _5[2];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^
4 >                         ^^
5 >                           ^^^^^^^^
6 >                                   ^^^^^^^^
7 >                                           ^^
8 >                                             ^^^^^^
9 >                                                   ^^^^^^^^
10>                                                           ^^
11>                                                             ^^^^^^^
12>                                                                    ^^^^^^^^
1->
2 >    
3 >        [numberA2, nameA2, skillA2]
4 >                         
5 >                           numberA2
6 >                                   
7 >                                           , 
8 >                                             nameA2
9 >                                                   
10>                                                           , 
11>                                                             skillA2
12>                                                                    
1->Emitted(63, 5) Source(59, 10) + SourceIndex(0)
2 >Emitted(63, 9) Source(59, 10) + SourceIndex(0)
3 >Emitted(63, 26) Source(59, 37) + SourceIndex(0)
4 >Emitted(63, 28) Source(59, 11) + SourceIndex(0)
5 >Emitted(63, 36) Source(59, 19) + SourceIndex(0)
6 >Emitted(63, 44) Source(59, 19) + SourceIndex(0)
7 >Emitted(63, 46) Source(59, 21) + SourceIndex(0)
8 >Emitted(63, 52) Source(59, 27) + SourceIndex(0)
9 >Emitted(63, 60) Source(59, 27) + SourceIndex(0)
10>Emitted(63, 62) Source(59, 29) + SourceIndex(0)
11>Emitted(63, 69) Source(59, 36) + SourceIndex(0)
12>Emitted(63, 77) Source(59, 36) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >] of robots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(64, 5) Source(60, 5) + SourceIndex(0)
2 >Emitted(64, 12) Source(60, 12) + SourceIndex(0)
3 >Emitted(64, 13) Source(60, 13) + SourceIndex(0)
4 >Emitted(64, 16) Source(60, 16) + SourceIndex(0)
5 >Emitted(64, 17) Source(60, 17) + SourceIndex(0)
6 >Emitted(64, 23) Source(60, 23) + SourceIndex(0)
7 >Emitted(64, 24) Source(60, 24) + SourceIndex(0)
8 >Emitted(64, 25) Source(60, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(65, 1) Source(61, 1) + SourceIndex(0)
2 >Emitted(65, 2) Source(61, 2) + SourceIndex(0)
---
>>>for (var _6 = 0, _7 = getRobots(); _6 < _7.length; _6++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^
6 >                      ^^^^^^^^^
7 >                               ^^
8 >                                 ^^
9 >                                   ^^^^^^^^^^^^^^
10>                                                 ^^
11>                                                   ^^^^
12>                                                       ^^
13>                                                         ^
14>                                                          ^^^^^^^^^^^^^^->
1->
  >
2 >for (let [numberA2, nameA2, skillA2] of 
3 >     getRobots()
4 >               
5 >                 
6 >                      getRobots
7 >                               ()
8 >                                 
9 >                                   getRobots()
10>                                                 
11>                                                   getRobots()
12>                                                       ) 
13>                                                         {
1->Emitted(66, 1) Source(62, 1) + SourceIndex(0)
2 >Emitted(66, 6) Source(62, 41) + SourceIndex(0)
3 >Emitted(66, 16) Source(62, 52) + SourceIndex(0)
4 >Emitted(66, 18) Source(62, 41) + SourceIndex(0)
5 >Emitted(66, 23) Source(62, 41) + SourceIndex(0)
6 >Emitted(66, 32) Source(62, 50) + SourceIndex(0)
7 >Emitted(66, 34) Source(62, 52) + SourceIndex(0)
8 >Emitted(66, 36) Source(62, 41) + SourceIndex(0)
9 >Emitted(66, 50) Source(62, 52) + SourceIndex(0)
10>Emitted(66, 52) Source(62, 41) + SourceIndex(0)
11>Emitted(66, 56) Source(62, 52) + SourceIndex(0)
12>Emitted(66, 58) Source(62, 54) + SourceIndex(0)
13>Emitted(66, 59) Source(62, 55) + SourceIndex(0)
---
>>>    var _8 = _7[_6], numberA2 = _8[0], nameA2 = _8[1], skillA2 = _8[2];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^
4 >                   ^^
5 >                     ^^^^^^^^
6 >                             ^^^^^^^^
7 >                                     ^^
8 >                                       ^^^^^^
9 >                                             ^^^^^^^^
10>                                                     ^^
11>                                                       ^^^^^^^
12>                                                              ^^^^^^^^
1->
2 >    
3 >        [numberA2, nameA2, skillA2]
4 >                   
5 >                     numberA2
6 >                             
7 >                                     , 
8 >                                       nameA2
9 >                                             
10>                                                     , 
11>                                                       skillA2
12>                                                              
1->Emitted(67, 5) Source(62, 10) + SourceIndex(0)
2 >Emitted(67, 9) Source(62, 10) + SourceIndex(0)
3 >Emitted(67, 20) Source(62, 37) + SourceIndex(0)
4 >Emitted(67, 22) Source(62, 11) + SourceIndex(0)
5 >Emitted(67, 30) Source(62, 19) + SourceIndex(0)
6 >Emitted(67, 38) Source(62, 19) + SourceIndex(0)
7 >Emitted(67, 40) Source(62, 21) + SourceIndex(0)
8 >Emitted(67, 46) Source(62, 27) + SourceIndex(0)
9 >Emitted(67, 54) Source(62, 27) + SourceIndex(0)
10>Emitted(67, 56) Source(62, 29) + SourceIndex(0)
11>Emitted(67, 63) Source(62, 36) + SourceIndex(0)
12>Emitted(67, 71) Source(62, 36) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >] of getRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(68, 5) Source(63, 5) + SourceIndex(0)
2 >Emitted(68, 12) Source(63, 12) + SourceIndex(0)
3 >Emitted(68, 13) Source(63, 13) + SourceIndex(0)
4 >Emitted(68, 16) Source(63, 16) + SourceIndex(0)
5 >Emitted(68, 17) Source(63, 17) + SourceIndex(0)
6 >Emitted(68, 23) Source(63, 23) + SourceIndex(0)
7 >Emitted(68, 24) Source(63, 24) + SourceIndex(0)
8 >Emitted(68, 25) Source(63, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(69, 1) Source(64, 1) + SourceIndex(0)
2 >Emitted(69, 2) Source(64, 2) + SourceIndex(0)
---
>>>for (var _9 = 0, _10 = [robotA, robotB]; _9 < _10.length; _9++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^
4 >               ^^
5 >                 ^^^^^^^
6 >                        ^^^^^^
7 >                              ^^
8 >                                ^^^^^^
9 >                                      ^
10>                                       ^^
11>                                         ^^^^^^^^^^^^^^^
12>                                                        ^^
13>                                                          ^^^^
14>                                                              ^^
15>                                                                ^
16>                                                                 ^^^^^^^^^^^^->
1->
  >
2 >for (let [numberA2, nameA2, skillA2] of 
3 >     [robotA, robotB]
4 >               
5 >                 [
6 >                        robotA
7 >                              , 
8 >                                robotB
9 >                                      ]
10>                                       
11>                                         [robotA, robotB]
12>                                                        
13>                                                          [robotA, robotB]
14>                                                              ) 
15>                                                                {
1->Emitted(70, 1) Source(65, 1) + SourceIndex(0)
2 >Emitted(70, 6) Source(65, 41) + SourceIndex(0)
3 >Emitted(70, 16) Source(65, 57) + SourceIndex(0)
4 >Emitted(70, 18) Source(65, 41) + SourceIndex(0)
5 >Emitted(70, 25) Source(65, 42) + SourceIndex(0)
6 >Emitted(70, 31) Source(65, 48) + SourceIndex(0)
7 >Emitted(70, 33) Source(65, 50) + SourceIndex(0)
8 >Emitted(70, 39) Source(65, 56) + SourceIndex(0)
9 >Emitted(70, 40) Source(65, 57) + SourceIndex(0)
10>Emitted(70, 42) Source(65, 41) + SourceIndex(0)
11>Emitted(70, 57) Source(65, 57) + SourceIndex(0)
12>Emitted(70, 59) Source(65, 41) + SourceIndex(0)
13>Emitted(70, 63) Source(65, 57) + SourceIndex(0)
14>Emitted(70, 65) Source(65, 59) + SourceIndex(0)
15>Emitted(70, 66) Source(65, 60) + SourceIndex(0)
---
>>>    var _11 = _10[_9], numberA2 = _11[0], nameA2 = _11[1], skillA2 = _11[2];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^
4 >                     ^^
5 >                       ^^^^^^^^
6 >                               ^^^^^^^^^
7 >                                        ^^
8 >                                          ^^^^^^
9 >                                                ^^^^^^^^^
10>                                                         ^^
11>                                                           ^^^^^^^
12>                                                                  ^^^^^^^^^
1->
2 >    
3 >        [numberA2, nameA2, skillA2]
4 >                     
5 >                       numberA2
6 >                               
7 >                                        , 
8 >                                          nameA2
9 >                                                
10>                                                         , 
11>                                                           skillA2
12>                                                                  
1->Emitted(71, 5) Source(65, 10) + SourceIndex(0)
2 >Emitted(71, 9) Source(65, 10) + SourceIndex(0)
3 >Emitted(71, 22) Source(65, 37) + SourceIndex(0)
4 >Emitted(71, 24) Source(65, 11) + SourceIndex(0)
5 >Emitted(71, 32) Source(65, 19) + SourceIndex(0)
6 >Emitted(71, 41) Source(65, 19) + SourceIndex(0)
7 >Emitted(71, 43) Source(65, 21) + SourceIndex(0)
8 >Emitted(71, 49) Source(65, 27) + SourceIndex(0)
9 >Emitted(71, 58) Source(65, 27) + SourceIndex(0)
10>Emitted(71, 60) Source(65, 29) + SourceIndex(0)
11>Emitted(71, 67) Source(65, 36) + SourceIndex(0)
12>Emitted(71, 76) Source(65, 36) + SourceIndex(0)
---
>>>    console.log(nameA2);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameA2
7 >                      )
8 >                       ;
1 >Emitted(72, 5) Source(66, 5) + SourceIndex(0)
2 >Emitted(72, 12) Source(66, 12) + SourceIndex(0)
3 >Emitted(72, 13) Source(66, 13) + SourceIndex(0)
4 >Emitted(72, 16) Source(66, 16) + SourceIndex(0)
5 >Emitted(72, 17) Source(66, 17) + SourceIndex(0)
6 >Emitted(72, 23) Source(66, 23) + SourceIndex(0)
7 >Emitted(72, 24) Source(66, 24) + SourceIndex(0)
8 >Emitted(72, 25) Source(66, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(73, 1) Source(67, 1) + SourceIndex(0)
2 >Emitted(73, 2) Source(67, 2) + SourceIndex(0)
---
>>>for (var _12 = 0, multiRobots_3 = multiRobots; _12 < multiRobots_3.length; _12++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                             ^^
7 >                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                         ^^
9 >                                                                           ^^^^^
10>                                                                                ^^
11>                                                                                  ^
12>                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >for (let [nameMA, [primarySkillA, secondarySkillA]] of 
3 >     multiRobots
4 >                
5 >                  multiRobots
6 >                                             
7 >                                               multiRobots
8 >                                                                         
9 >                                                                           multiRobots
10>                                                                                ) 
11>                                                                                  {
1->Emitted(74, 1) Source(68, 1) + SourceIndex(0)
2 >Emitted(74, 6) Source(68, 56) + SourceIndex(0)
3 >Emitted(74, 17) Source(68, 67) + SourceIndex(0)
4 >Emitted(74, 19) Source(68, 56) + SourceIndex(0)
5 >Emitted(74, 46) Source(68, 67) + SourceIndex(0)
6 >Emitted(74, 48) Source(68, 56) + SourceIndex(0)
7 >Emitted(74, 74) Source(68, 67) + SourceIndex(0)
8 >Emitted(74, 76) Source(68, 56) + SourceIndex(0)
9 >Emitted(74, 81) Source(68, 67) + SourceIndex(0)
10>Emitted(74, 83) Source(68, 69) + SourceIndex(0)
11>Emitted(74, 84) Source(68, 70) + SourceIndex(0)
---
>>>    var _13 = multiRobots_3[_12], nameMA = _13[0], _14 = _13[1], primarySkillA = _14[0], secondarySkillA = _14[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^^^^^^
4 >                                ^^
5 >                                  ^^^^^^
6 >                                        ^^^^^^^^^
7 >                                                 ^^
8 >                                                   ^^^^^^^^^^^^
9 >                                                               ^^
10>                                                                 ^^^^^^^^^^^^^
11>                                                                              ^^^^^^^^^
12>                                                                                       ^^
13>                                                                                         ^^^^^^^^^^^^^^^
14>                                                                                                        ^^^^^^^^^
1->
2 >    
3 >        [nameMA, [primarySkillA, secondarySkillA]]
4 >                                
5 >                                  nameMA
6 >                                        
7 >                                                 , 
8 >                                                   [primarySkillA, secondarySkillA]
9 >                                                               
10>                                                                 primarySkillA
11>                                                                              
12>                                                                                       , 
13>                                                                                         secondarySkillA
14>                                                                                                        
1->Emitted(75, 5) Source(68, 10) + SourceIndex(0)
2 >Emitted(75, 9) Source(68, 10) + SourceIndex(0)
3 >Emitted(75, 33) Source(68, 52) + SourceIndex(0)
4 >Emitted(75, 35) Source(68, 11) + SourceIndex(0)
5 >Emitted(75, 41) Source(68, 17) + SourceIndex(0)
6 >Emitted(75, 50) Source(68, 17) + SourceIndex(0)
7 >Emitted(75, 52) Source(68, 19) + SourceIndex(0)
8 >Emitted(75, 64) Source(68, 51) + SourceIndex(0)
9 >Emitted(75, 66) Source(68, 20) + SourceIndex(0)
10>Emitted(75, 79) Source(68, 33) + SourceIndex(0)
11>Emitted(75, 88) Source(68, 33) + SourceIndex(0)
12>Emitted(75, 90) Source(68, 35) + SourceIndex(0)
13>Emitted(75, 105) Source(68, 50) + SourceIndex(0)
14>Emitted(75, 114) Source(68, 50) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >]] of multiRobots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(76, 5) Source(69, 5) + SourceIndex(0)
2 >Emitted(76, 12) Source(69, 12) + SourceIndex(0)
3 >Emitted(76, 13) Source(69, 13) + SourceIndex(0)
4 >Emitted(76, 16) Source(69, 16) + SourceIndex(0)
5 >Emitted(76, 17) Source(69, 17) + SourceIndex(0)
6 >Emitted(76, 23) Source(69, 23) + SourceIndex(0)
7 >Emitted(76, 24) Source(69, 24) + SourceIndex(0)
8 >Emitted(76, 25) Source(69, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(77, 1) Source(70, 1) + SourceIndex(0)
2 >Emitted(77, 2) Source(70, 2) + SourceIndex(0)
---
>>>for (var _15 = 0, _16 = getMultiRobots(); _15 < _16.length; _15++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^
6 >                        ^^^^^^^^^^^^^^
7 >                                      ^^
8 >                                        ^^
9 >                                          ^^^^^^^^^^^^^^^^
10>                                                          ^^
11>                                                            ^^^^^
12>                                                                 ^^
13>                                                                   ^
14>                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >for (let [nameMA, [primarySkillA, secondarySkillA]] of 
3 >     getMultiRobots()
4 >                
5 >                  
6 >                        getMultiRobots
7 >                                      ()
8 >                                        
9 >                                          getMultiRobots()
10>                                                          
11>                                                            getMultiRobots()
12>                                                                 ) 
13>                                                                   {
1->Emitted(78, 1) Source(71, 1) + SourceIndex(0)
2 >Emitted(78, 6) Source(71, 56) + SourceIndex(0)
3 >Emitted(78, 17) Source(71, 72) + SourceIndex(0)
4 >Emitted(78, 19) Source(71, 56) + SourceIndex(0)
5 >Emitted(78, 25) Source(71, 56) + SourceIndex(0)
6 >Emitted(78, 39) Source(71, 70) + SourceIndex(0)
7 >Emitted(78, 41) Source(71, 72) + SourceIndex(0)
8 >Emitted(78, 43) Source(71, 56) + SourceIndex(0)
9 >Emitted(78, 59) Source(71, 72) + SourceIndex(0)
10>Emitted(78, 61) Source(71, 56) + SourceIndex(0)
11>Emitted(78, 66) Source(71, 72) + SourceIndex(0)
12>Emitted(78, 68) Source(71, 74) + SourceIndex(0)
13>Emitted(78, 69) Source(71, 75) + SourceIndex(0)
---
>>>    var _17 = _16[_15], nameMA = _17[0], _18 = _17[1], primarySkillA = _18[0], secondarySkillA = _18[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^
4 >                      ^^
5 >                        ^^^^^^
6 >                              ^^^^^^^^^
7 >                                       ^^
8 >                                         ^^^^^^^^^^^^
9 >                                                     ^^
10>                                                       ^^^^^^^^^^^^^
11>                                                                    ^^^^^^^^^
12>                                                                             ^^
13>                                                                               ^^^^^^^^^^^^^^^
14>                                                                                              ^^^^^^^^^
1->
2 >    
3 >        [nameMA, [primarySkillA, secondarySkillA]]
4 >                      
5 >                        nameMA
6 >                              
7 >                                       , 
8 >                                         [primarySkillA, secondarySkillA]
9 >                                                     
10>                                                       primarySkillA
11>                                                                    
12>                                                                             , 
13>                                                                               secondarySkillA
14>                                                                                              
1->Emitted(79, 5) Source(71, 10) + SourceIndex(0)
2 >Emitted(79, 9) Source(71, 10) + SourceIndex(0)
3 >Emitted(79, 23) Source(71, 52) + SourceIndex(0)
4 >Emitted(79, 25) Source(71, 11) + SourceIndex(0)
5 >Emitted(79, 31) Source(71, 17) + SourceIndex(0)
6 >Emitted(79, 40) Source(71, 17) + SourceIndex(0)
7 >Emitted(79, 42) Source(71, 19) + SourceIndex(0)
8 >Emitted(79, 54) Source(71, 51) + SourceIndex(0)
9 >Emitted(79, 56) Source(71, 20) + SourceIndex(0)
10>Emitted(79, 69) Source(71, 33) + SourceIndex(0)
11>Emitted(79, 78) Source(71, 33) + SourceIndex(0)
12>Emitted(79, 80) Source(71, 35) + SourceIndex(0)
13>Emitted(79, 95) Source(71, 50) + SourceIndex(0)
14>Emitted(79, 104) Source(71, 50) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >]] of getMultiRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(80, 5) Source(72, 5) + SourceIndex(0)
2 >Emitted(80, 12) Source(72, 12) + SourceIndex(0)
3 >Emitted(80, 13) Source(72, 13) + SourceIndex(0)
4 >Emitted(80, 16) Source(72, 16) + SourceIndex(0)
5 >Emitted(80, 17) Source(72, 17) + SourceIndex(0)
6 >Emitted(80, 23) Source(72, 23) + SourceIndex(0)
7 >Emitted(80, 24) Source(72, 24) + SourceIndex(0)
8 >Emitted(80, 25) Source(72, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(81, 1) Source(73, 1) + SourceIndex(0)
2 >Emitted(81, 2) Source(73, 2) + SourceIndex(0)
---
>>>for (var _19 = 0, _20 = [multiRobotA, multiRobotB]; _19 < _20.length; _19++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^
6 >                         ^^^^^^^^^^^
7 >                                    ^^
8 >                                      ^^^^^^^^^^^
9 >                                                 ^
10>                                                  ^^
11>                                                    ^^^^^^^^^^^^^^^^
12>                                                                    ^^
13>                                                                      ^^^^^
14>                                                                           ^^
15>                                                                             ^
16>                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
2 >for (let [nameMA, [primarySkillA, secondarySkillA]] of 
3 >     [multiRobotA, multiRobotB]
4 >                
5 >                  [
6 >                         multiRobotA
7 >                                    , 
8 >                                      multiRobotB
9 >                                                 ]
10>                                                  
11>                                                    [multiRobotA, multiRobotB]
12>                                                                    
13>                                                                      [multiRobotA, multiRobotB]
14>                                                                           ) 
15>                                                                             {
1->Emitted(82, 1) Source(74, 1) + SourceIndex(0)
2 >Emitted(82, 6) Source(74, 56) + SourceIndex(0)
3 >Emitted(82, 17) Source(74, 82) + SourceIndex(0)
4 >Emitted(82, 19) Source(74, 56) + SourceIndex(0)
5 >Emitted(82, 26) Source(74, 57) + SourceIndex(0)
6 >Emitted(82, 37) Source(74, 68) + SourceIndex(0)
7 >Emitted(82, 39) Source(74, 70) + SourceIndex(0)
8 >Emitted(82, 50) Source(74, 81) + SourceIndex(0)
9 >Emitted(82, 51) Source(74, 82) + SourceIndex(0)
10>Emitted(82, 53) Source(74, 56) + SourceIndex(0)
11>Emitted(82, 69) Source(74, 82) + SourceIndex(0)
12>Emitted(82, 71) Source(74, 56) + SourceIndex(0)
13>Emitted(82, 76) Source(74, 82) + SourceIndex(0)
14>Emitted(82, 78) Source(74, 84) + SourceIndex(0)
15>Emitted(82, 79) Source(74, 85) + SourceIndex(0)
---
>>>    var _21 = _20[_19], nameMA = _21[0], _22 = _21[1], primarySkillA = _22[0], secondarySkillA = _22[1];
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^
4 >                      ^^
5 >                        ^^^^^^
6 >                              ^^^^^^^^^
7 >                                       ^^
8 >                                         ^^^^^^^^^^^^
9 >                                                     ^^
10>                                                       ^^^^^^^^^^^^^
11>                                                                    ^^^^^^^^^
12>                                                                             ^^
13>                                                                               ^^^^^^^^^^^^^^^
14>                                                                                              ^^^^^^^^^
1->
2 >    
3 >        [nameMA, [primarySkillA, secondarySkillA]]
4 >                      
5 >                        nameMA
6 >                              
7 >                                       , 
8 >                                         [primarySkillA, secondarySkillA]
9 >                                                     
10>                                                       primarySkillA
11>                                                                    
12>                                                                             , 
13>                                                                               secondarySkillA
14>                                                                                              
1->Emitted(83, 5) Source(74, 10) + SourceIndex(0)
2 >Emitted(83, 9) Source(74, 10) + SourceIndex(0)
3 >Emitted(83, 23) Source(74, 52) + SourceIndex(0)
4 >Emitted(83, 25) Source(74, 11) + SourceIndex(0)
5 >Emitted(83, 31) Source(74, 17) + SourceIndex(0)
6 >Emitted(83, 40) Source(74, 17) + SourceIndex(0)
7 >Emitted(83, 42) Source(74, 19) + SourceIndex(0)
8 >Emitted(83, 54) Source(74, 51) + SourceIndex(0)
9 >Emitted(83, 56) Source(74, 20) + SourceIndex(0)
10>Emitted(83, 69) Source(74, 33) + SourceIndex(0)
11>Emitted(83, 78) Source(74, 33) + SourceIndex(0)
12>Emitted(83, 80) Source(74, 35) + SourceIndex(0)
13>Emitted(83, 95) Source(74, 50) + SourceIndex(0)
14>Emitted(83, 104) Source(74, 50) + SourceIndex(0)
---
>>>    console.log(nameMA);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^
7 >                      ^
8 >                       ^
1 >]] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                nameMA
7 >                      )
8 >                       ;
1 >Emitted(84, 5) Source(75, 5) + SourceIndex(0)
2 >Emitted(84, 12) Source(75, 12) + SourceIndex(0)
3 >Emitted(84, 13) Source(75, 13) + SourceIndex(0)
4 >Emitted(84, 16) Source(75, 16) + SourceIndex(0)
5 >Emitted(84, 17) Source(75, 17) + SourceIndex(0)
6 >Emitted(84, 23) Source(75, 23) + SourceIndex(0)
7 >Emitted(84, 24) Source(75, 24) + SourceIndex(0)
8 >Emitted(84, 25) Source(75, 25) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(85, 1) Source(76, 1) + SourceIndex(0)
2 >Emitted(85, 2) Source(76, 2) + SourceIndex(0)
---
>>>for (var _23 = 0, robots_4 = robots; _23 < robots_4.length; _23++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^^^^^^^^^^^
6 >                                   ^^
7 >                                     ^^^^^^^^^^^^^^^^^^^^^
8 >                                                          ^^
9 >                                                            ^^^^^
10>                                                                 ^^
11>                                                                   ^
12>                                                                    ^^^^^^^->
1->
  >
  >
2 >for (let [numberA3, ...robotAInfo] of 
3 >     robots
4 >                
5 >                  robots
6 >                                   
7 >                                     robots
8 >                                                          
9 >                                                            robots
10>                                                                 ) 
11>                                                                   {
1->Emitted(86, 1) Source(78, 1) + SourceIndex(0)
2 >Emitted(86, 6) Source(78, 39) + SourceIndex(0)
3 >Emitted(86, 17) Source(78, 45) + SourceIndex(0)
4 >Emitted(86, 19) Source(78, 39) + SourceIndex(0)
5 >Emitted(86, 36) Source(78, 45) + SourceIndex(0)
6 >Emitted(86, 38) Source(78, 39) + SourceIndex(0)
7 >Emitted(86, 59) Source(78, 45) + SourceIndex(0)
8 >Emitted(86, 61) Source(78, 39) + SourceIndex(0)
9 >Emitted(86, 66) Source(78, 45) + SourceIndex(0)
10>Emitted(86, 68) Source(78, 47) + SourceIndex(0)
11>Emitted(86, 69) Source(78, 48) + SourceIndex(0)
---
>>>    var _24 = robots_4[_23], numberA3 = _24[0], robotAInfo = _24.slice(1);
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^^^^^
4 >                           ^^
5 >                             ^^^^^^^^
6 >                                     ^^^^^^^^^
7 >                                              ^^
8 >                                                ^^^^^^^^^^
9 >                                                          ^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberA3, ...robotAInfo]
4 >                           
5 >                             numberA3
6 >                                     
7 >                                              , ...
8 >                                                robotAInfo
9 >                                                          
1->Emitted(87, 5) Source(78, 10) + SourceIndex(0)
2 >Emitted(87, 9) Source(78, 10) + SourceIndex(0)
3 >Emitted(87, 28) Source(78, 35) + SourceIndex(0)
4 >Emitted(87, 30) Source(78, 11) + SourceIndex(0)
5 >Emitted(87, 38) Source(78, 19) + SourceIndex(0)
6 >Emitted(87, 47) Source(78, 19) + SourceIndex(0)
7 >Emitted(87, 49) Source(78, 24) + SourceIndex(0)
8 >Emitted(87, 59) Source(78, 34) + SourceIndex(0)
9 >Emitted(87, 74) Source(78, 34) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >] of robots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(88, 5) Source(79, 5) + SourceIndex(0)
2 >Emitted(88, 12) Source(79, 12) + SourceIndex(0)
3 >Emitted(88, 13) Source(79, 13) + SourceIndex(0)
4 >Emitted(88, 16) Source(79, 16) + SourceIndex(0)
5 >Emitted(88, 17) Source(79, 17) + SourceIndex(0)
6 >Emitted(88, 25) Source(79, 25) + SourceIndex(0)
7 >Emitted(88, 26) Source(79, 26) + SourceIndex(0)
8 >Emitted(88, 27) Source(79, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(89, 1) Source(80, 1) + SourceIndex(0)
2 >Emitted(89, 2) Source(80, 2) + SourceIndex(0)
---
>>>for (var _25 = 0, _26 = getRobots(); _25 < _26.length; _25++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^
6 >                        ^^^^^^^^^
7 >                                 ^^
8 >                                   ^^
9 >                                     ^^^^^^^^^^^^^^^^
10>                                                     ^^
11>                                                       ^^^^^
12>                                                            ^^
13>                                                              ^
14>                                                               ^^^^^^^->
1->
  >
2 >for (let [numberA3, ...robotAInfo] of 
3 >     getRobots()
4 >                
5 >                  
6 >                        getRobots
7 >                                 ()
8 >                                   
9 >                                     getRobots()
10>                                                     
11>                                                       getRobots()
12>                                                            ) 
13>                                                              {
1->Emitted(90, 1) Source(81, 1) + SourceIndex(0)
2 >Emitted(90, 6) Source(81, 39) + SourceIndex(0)
3 >Emitted(90, 17) Source(81, 50) + SourceIndex(0)
4 >Emitted(90, 19) Source(81, 39) + SourceIndex(0)
5 >Emitted(90, 25) Source(81, 39) + SourceIndex(0)
6 >Emitted(90, 34) Source(81, 48) + SourceIndex(0)
7 >Emitted(90, 36) Source(81, 50) + SourceIndex(0)
8 >Emitted(90, 38) Source(81, 39) + SourceIndex(0)
9 >Emitted(90, 54) Source(81, 50) + SourceIndex(0)
10>Emitted(90, 56) Source(81, 39) + SourceIndex(0)
11>Emitted(90, 61) Source(81, 50) + SourceIndex(0)
12>Emitted(90, 63) Source(81, 52) + SourceIndex(0)
13>Emitted(90, 64) Source(81, 53) + SourceIndex(0)
---
>>>    var _27 = _26[_25], numberA3 = _27[0], robotAInfo = _27.slice(1);
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^
4 >                      ^^
5 >                        ^^^^^^^^
6 >                                ^^^^^^^^^
7 >                                         ^^
8 >                                           ^^^^^^^^^^
9 >                                                     ^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberA3, ...robotAInfo]
4 >                      
5 >                        numberA3
6 >                                
7 >                                         , ...
8 >                                           robotAInfo
9 >                                                     
1->Emitted(91, 5) Source(81, 10) + SourceIndex(0)
2 >Emitted(91, 9) Source(81, 10) + SourceIndex(0)
3 >Emitted(91, 23) Source(81, 35) + SourceIndex(0)
4 >Emitted(91, 25) Source(81, 11) + SourceIndex(0)
5 >Emitted(91, 33) Source(81, 19) + SourceIndex(0)
6 >Emitted(91, 42) Source(81, 19) + SourceIndex(0)
7 >Emitted(91, 44) Source(81, 24) + SourceIndex(0)
8 >Emitted(91, 54) Source(81, 34) + SourceIndex(0)
9 >Emitted(91, 69) Source(81, 34) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >] of getRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(92, 5) Source(82, 5) + SourceIndex(0)
2 >Emitted(92, 12) Source(82, 12) + SourceIndex(0)
3 >Emitted(92, 13) Source(82, 13) + SourceIndex(0)
4 >Emitted(92, 16) Source(82, 16) + SourceIndex(0)
5 >Emitted(92, 17) Source(82, 17) + SourceIndex(0)
6 >Emitted(92, 25) Source(82, 25) + SourceIndex(0)
7 >Emitted(92, 26) Source(82, 26) + SourceIndex(0)
8 >Emitted(92, 27) Source(82, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(93, 1) Source(83, 1) + SourceIndex(0)
2 >Emitted(93, 2) Source(83, 2) + SourceIndex(0)
---
>>>for (var _28 = 0, _29 = [robotA, robotB]; _28 < _29.length; _28++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^
6 >                         ^^^^^^
7 >                               ^^
8 >                                 ^^^^^^
9 >                                       ^
10>                                        ^^
11>                                          ^^^^^^^^^^^^^^^^
12>                                                          ^^
13>                                                            ^^^^^
14>                                                                 ^^
15>                                                                   ^
16>                                                                    ^^->
1->
  >
2 >for (let [numberA3, ...robotAInfo] of 
3 >     [robotA, robotB]
4 >                
5 >                  [
6 >                         robotA
7 >                               , 
8 >                                 robotB
9 >                                       ]
10>                                        
11>                                          [robotA, robotB]
12>                                                          
13>                                                            [robotA, robotB]
14>                                                                 ) 
15>                                                                   {
1->Emitted(94, 1) Source(84, 1) + SourceIndex(0)
2 >Emitted(94, 6) Source(84, 39) + SourceIndex(0)
3 >Emitted(94, 17) Source(84, 55) + SourceIndex(0)
4 >Emitted(94, 19) Source(84, 39) + SourceIndex(0)
5 >Emitted(94, 26) Source(84, 40) + SourceIndex(0)
6 >Emitted(94, 32) Source(84, 46) + SourceIndex(0)
7 >Emitted(94, 34) Source(84, 48) + SourceIndex(0)
8 >Emitted(94, 40) Source(84, 54) + SourceIndex(0)
9 >Emitted(94, 41) Source(84, 55) + SourceIndex(0)
10>Emitted(94, 43) Source(84, 39) + SourceIndex(0)
11>Emitted(94, 59) Source(84, 55) + SourceIndex(0)
12>Emitted(94, 61) Source(84, 39) + SourceIndex(0)
13>Emitted(94, 66) Source(84, 55) + SourceIndex(0)
14>Emitted(94, 68) Source(84, 57) + SourceIndex(0)
15>Emitted(94, 69) Source(84, 58) + SourceIndex(0)
---
>>>    var _30 = _29[_28], numberA3 = _30[0], robotAInfo = _30.slice(1);
1->^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^
4 >                      ^^
5 >                        ^^^^^^^^
6 >                                ^^^^^^^^^
7 >                                         ^^
8 >                                           ^^^^^^^^^^
9 >                                                     ^^^^^^^^^^^^^^^
1->
2 >    
3 >        [numberA3, ...robotAInfo]
4 >                      
5 >                        numberA3
6 >                                
7 >                                         , ...
8 >                                           robotAInfo
9 >                                                     
1->Emitted(95, 5) Source(84, 10) + SourceIndex(0)
2 >Emitted(95, 9) Source(84, 10) + SourceIndex(0)
3 >Emitted(95, 23) Source(84, 35) + SourceIndex(0)
4 >Emitted(95, 25) Source(84, 11) + SourceIndex(0)
5 >Emitted(95, 33) Source(84, 19) + SourceIndex(0)
6 >Emitted(95, 42) Source(84, 19) + SourceIndex(0)
7 >Emitted(95, 44) Source(84, 24) + SourceIndex(0)
8 >Emitted(95, 54) Source(84, 34) + SourceIndex(0)
9 >Emitted(95, 69) Source(84, 34) + SourceIndex(0)
---
>>>    console.log(numberA3);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^
7 >                        ^
8 >                         ^
1 >] of [robotA, robotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                numberA3
7 >                        )
8 >                         ;
1 >Emitted(96, 5) Source(85, 5) + SourceIndex(0)
2 >Emitted(96, 12) Source(85, 12) + SourceIndex(0)
3 >Emitted(96, 13) Source(85, 13) + SourceIndex(0)
4 >Emitted(96, 16) Source(85, 16) + SourceIndex(0)
5 >Emitted(96, 17) Source(85, 17) + SourceIndex(0)
6 >Emitted(96, 25) Source(85, 25) + SourceIndex(0)
7 >Emitted(96, 26) Source(85, 26) + SourceIndex(0)
8 >Emitted(96, 27) Source(85, 27) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(97, 1) Source(86, 1) + SourceIndex(0)
2 >Emitted(97, 2) Source(86, 2) + SourceIndex(0)
---
>>>for (var _31 = 0, multiRobots_4 = multiRobots; _31 < multiRobots_4.length; _31++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 >                                             ^^
7 >                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                         ^^
9 >                                                                           ^^^^^
10>                                                                                ^^
11>                                                                                  ^
1->
  >
2 >for (let [...multiRobotAInfo] of 
3 >     multiRobots
4 >                
5 >                  multiRobots
6 >                                             
7 >                                               multiRobots
8 >                                                                         
9 >                                                                           multiRobots
10>                                                                                ) 
11>                                                                                  {
1->Emitted(98, 1) Source(87, 1) + SourceIndex(0)
2 >Emitted(98, 6) Source(87, 34) + SourceIndex(0)
3 >Emitted(98, 17) Source(87, 45) + SourceIndex(0)
4 >Emitted(98, 19) Source(87, 34) + SourceIndex(0)
5 >Emitted(98, 46) Source(87, 45) + SourceIndex(0)
6 >Emitted(98, 48) Source(87, 34) + SourceIndex(0)
7 >Emitted(98, 74) Source(87, 45) + SourceIndex(0)
8 >Emitted(98, 76) Source(87, 34) + SourceIndex(0)
9 >Emitted(98, 81) Source(87, 45) + SourceIndex(0)
10>Emitted(98, 83) Source(87, 47) + SourceIndex(0)
11>Emitted(98, 84) Source(87, 48) + SourceIndex(0)
---
>>>    var multiRobotAInfo = multiRobots_4[_31].slice(0);
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^
4 >                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1 >
2 >    ...
3 >        multiRobotAInfo
4 >                       
1 >Emitted(99, 5) Source(87, 11) + SourceIndex(0)
2 >Emitted(99, 9) Source(87, 14) + SourceIndex(0)
3 >Emitted(99, 24) Source(87, 29) + SourceIndex(0)
4 >Emitted(99, 54) Source(87, 29) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >] of multiRobots) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(100, 5) Source(88, 5) + SourceIndex(0)
2 >Emitted(100, 12) Source(88, 12) + SourceIndex(0)
3 >Emitted(100, 13) Source(88, 13) + SourceIndex(0)
4 >Emitted(100, 16) Source(88, 16) + SourceIndex(0)
5 >Emitted(100, 17) Source(88, 17) + SourceIndex(0)
6 >Emitted(100, 32) Source(88, 32) + SourceIndex(0)
7 >Emitted(100, 33) Source(88, 33) + SourceIndex(0)
8 >Emitted(100, 34) Source(88, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(101, 1) Source(89, 1) + SourceIndex(0)
2 >Emitted(101, 2) Source(89, 2) + SourceIndex(0)
---
>>>for (var _32 = 0, _33 = getMultiRobots(); _32 < _33.length; _32++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^
6 >                        ^^^^^^^^^^^^^^
7 >                                      ^^
8 >                                        ^^
9 >                                          ^^^^^^^^^^^^^^^^
10>                                                          ^^
11>                                                            ^^^^^
12>                                                                 ^^
13>                                                                   ^
1->
  >
2 >for (let [...multiRobotAInfo] of 
3 >     getMultiRobots()
4 >                
5 >                  
6 >                        getMultiRobots
7 >                                      ()
8 >                                        
9 >                                          getMultiRobots()
10>                                                          
11>                                                            getMultiRobots()
12>                                                                 ) 
13>                                                                   {
1->Emitted(102, 1) Source(90, 1) + SourceIndex(0)
2 >Emitted(102, 6) Source(90, 34) + SourceIndex(0)
3 >Emitted(102, 17) Source(90, 50) + SourceIndex(0)
4 >Emitted(102, 19) Source(90, 34) + SourceIndex(0)
5 >Emitted(102, 25) Source(90, 34) + SourceIndex(0)
6 >Emitted(102, 39) Source(90, 48) + SourceIndex(0)
7 >Emitted(102, 41) Source(90, 50) + SourceIndex(0)
8 >Emitted(102, 43) Source(90, 34) + SourceIndex(0)
9 >Emitted(102, 59) Source(90, 50) + SourceIndex(0)
10>Emitted(102, 61) Source(90, 34) + SourceIndex(0)
11>Emitted(102, 66) Source(90, 50) + SourceIndex(0)
12>Emitted(102, 68) Source(90, 52) + SourceIndex(0)
13>Emitted(102, 69) Source(90, 53) + SourceIndex(0)
---
>>>    var multiRobotAInfo = _33[_32].slice(0);
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^
4 >                       ^^^^^^^^^^^^^^^^^^^^
1 >
2 >    ...
3 >        multiRobotAInfo
4 >                       
1 >Emitted(103, 5) Source(90, 11) + SourceIndex(0)
2 >Emitted(103, 9) Source(90, 14) + SourceIndex(0)
3 >Emitted(103, 24) Source(90, 29) + SourceIndex(0)
4 >Emitted(103, 44) Source(90, 29) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >] of getMultiRobots()) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(104, 5) Source(91, 5) + SourceIndex(0)
2 >Emitted(104, 12) Source(91, 12) + SourceIndex(0)
3 >Emitted(104, 13) Source(91, 13) + SourceIndex(0)
4 >Emitted(104, 16) Source(91, 16) + SourceIndex(0)
5 >Emitted(104, 17) Source(91, 17) + SourceIndex(0)
6 >Emitted(104, 32) Source(91, 32) + SourceIndex(0)
7 >Emitted(104, 33) Source(91, 33) + SourceIndex(0)
8 >Emitted(104, 34) Source(91, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(105, 1) Source(92, 1) + SourceIndex(0)
2 >Emitted(105, 2) Source(92, 2) + SourceIndex(0)
---
>>>for (var _34 = 0, _35 = [multiRobotA, multiRobotB]; _34 < _35.length; _34++) {
1->
2 >^^^^^
3 >     ^^^^^^^^^^^
4 >                ^^
5 >                  ^^^^^^^
6 >                         ^^^^^^^^^^^
7 >                                    ^^
8 >                                      ^^^^^^^^^^^
9 >                                                 ^
10>                                                  ^^
11>                                                    ^^^^^^^^^^^^^^^^
12>                                                                    ^^
13>                                                                      ^^^^^
14>                                                                           ^^
15>                                                                             ^
1->
  >
2 >for (let [...multiRobotAInfo] of 
3 >     [multiRobotA, multiRobotB]
4 >                
5 >                  [
6 >                         multiRobotA
7 >                                    , 
8 >                                      multiRobotB
9 >                                                 ]
10>                                                  
11>                                                    [multiRobotA, multiRobotB]
12>                                                                    
13>                                                                      [multiRobotA, multiRobotB]
14>                                                                           ) 
15>                                                                             {
1->Emitted(106, 1) Source(93, 1) + SourceIndex(0)
2 >Emitted(106, 6) Source(93, 34) + SourceIndex(0)
3 >Emitted(106, 17) Source(93, 60) + SourceIndex(0)
4 >Emitted(106, 19) Source(93, 34) + SourceIndex(0)
5 >Emitted(106, 26) Source(93, 35) + SourceIndex(0)
6 >Emitted(106, 37) Source(93, 46) + SourceIndex(0)
7 >Emitted(106, 39) Source(93, 48) + SourceIndex(0)
8 >Emitted(106, 50) Source(93, 59) + SourceIndex(0)
9 >Emitted(106, 51) Source(93, 60) + SourceIndex(0)
10>Emitted(106, 53) Source(93, 34) + SourceIndex(0)
11>Emitted(106, 69) Source(93, 60) + SourceIndex(0)
12>Emitted(106, 71) Source(93, 34) + SourceIndex(0)
13>Emitted(106, 76) Source(93, 60) + SourceIndex(0)
14>Emitted(106, 78) Source(93, 62) + SourceIndex(0)
15>Emitted(106, 79) Source(93, 63) + SourceIndex(0)
---
>>>    var multiRobotAInfo = _35[_34].slice(0);
1 >^^^^
2 >    ^^^^
3 >        ^^^^^^^^^^^^^^^
4 >                       ^^^^^^^^^^^^^^^^^^^^
1 >
2 >    ...
3 >        multiRobotAInfo
4 >                       
1 >Emitted(107, 5) Source(93, 11) + SourceIndex(0)
2 >Emitted(107, 9) Source(93, 14) + SourceIndex(0)
3 >Emitted(107, 24) Source(93, 29) + SourceIndex(0)
4 >Emitted(107, 44) Source(93, 29) + SourceIndex(0)
---
>>>    console.log(multiRobotAInfo);
1 >^^^^
2 >    ^^^^^^^
3 >           ^
4 >            ^^^
5 >               ^
6 >                ^^^^^^^^^^^^^^^
7 >                               ^
8 >                                ^
1 >] of [multiRobotA, multiRobotB]) {
  >    
2 >    console
3 >           .
4 >            log
5 >               (
6 >                multiRobotAInfo
7 >                               )
8 >                                ;
1 >Emitted(108, 5) Source(94, 5) + SourceIndex(0)
2 >Emitted(108, 12) Source(94, 12) + SourceIndex(0)
3 >Emitted(108, 13) Source(94, 13) + SourceIndex(0)
4 >Emitted(108, 16) Source(94, 16) + SourceIndex(0)
5 >Emitted(108, 17) Source(94, 17) + SourceIndex(0)
6 >Emitted(108, 32) Source(94, 32) + SourceIndex(0)
7 >Emitted(108, 33) Source(94, 33) + SourceIndex(0)
8 >Emitted(108, 34) Source(94, 34) + SourceIndex(0)
---
>>>}
1 >
2 >^
3 > ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >
2 >}
1 >Emitted(109, 1) Source(95, 1) + SourceIndex(0)
2 >Emitted(109, 2) Source(95, 2) + SourceIndex(0)
---
>>>//# sourceMappingURL=sourceMapValidationDestructuringForOfArrayBindingPattern.js.map