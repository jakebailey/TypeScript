moduleMemberWithoutTypeAnnotation1.ts(4,13): error TS2322: Type 'null' is not assignable to type 'SyntaxNode'.
moduleMemberWithoutTypeAnnotation1.ts(29,13): error TS2322: Type 'null' is not assignable to type 'PositionedToken'.
moduleMemberWithoutTypeAnnotation1.ts(31,27): error TS7006: Parameter 'x' implicitly has an 'any' type.
moduleMemberWithoutTypeAnnotation1.ts(31,30): error TS7006: Parameter 'y' implicitly has an 'any' type.
moduleMemberWithoutTypeAnnotation1.ts(31,33): error TS7006: Parameter 'z' implicitly has an 'any' type.


==== moduleMemberWithoutTypeAnnotation1.ts (5 errors) ====
    module TypeScript.Parser {
        class SyntaxCursor {
            public currentNode(): SyntaxNode {
                return null;
                ~~~~~~
!!! error TS2322: Type 'null' is not assignable to type 'SyntaxNode'.
            }
        }
    }
    
    module TypeScript {
        export interface ISyntaxElement { };
        export interface ISyntaxToken { };
    
        export class PositionedElement {
            public childIndex(child: ISyntaxElement) {
                return Syntax.childIndex();
            }
        }
    
        export class PositionedToken {
            constructor(parent: PositionedElement, token: ISyntaxToken, fullStart: number) {
            }
        }
    }
    
    module TypeScript {
        export class SyntaxNode {
            public findToken(position: number, includeSkippedTokens: boolean = false): PositionedToken {
                var positionedToken = this.findTokenInternal(null, position, 0);
                return null;
                ~~~~~~
!!! error TS2322: Type 'null' is not assignable to type 'PositionedToken'.
            }
            findTokenInternal(x, y, z) {
                              ~
!!! error TS7006: Parameter 'x' implicitly has an 'any' type.
                                 ~
!!! error TS7006: Parameter 'y' implicitly has an 'any' type.
                                    ~
!!! error TS7006: Parameter 'z' implicitly has an 'any' type.
                return null;
            }
        }
    }
    
    module TypeScript.Syntax {
        export function childIndex() { }
    
        export class VariableWidthTokenWithTrailingTrivia implements ISyntaxToken {
            private findTokenInternal(parent: PositionedElement, position: number, fullStart: number) {
                return new PositionedToken(parent, this, fullStart);
            }
        }
    }
    