//// [tests/cases/compiler/noImplicitAnyDestructuringParameterDeclaration.ts] ////

=== noImplicitAnyDestructuringParameterDeclaration.ts ===
function f1([a], {b}, c, d) { // error
>f1 : ([a]: [any], { b }: { b: any; }, c: any, d: any) => void
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : any
>  : ^^^
>b : any
>  : ^^^
>c : any
>  : ^^^
>d : any
>  : ^^^
}
function f2([a = undefined], {b = null}, c = undefined, d = null) { // error
>f2 : ([a]: [undefined?], { b }: { b?: null | undefined; }, c?: undefined, d?: null) => void
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a : undefined
>  : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^
>b : null
>  : ^^^^
>c : undefined
>  : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^
>d : null
>  : ^^^^
}
function f3([a]: [any], {b}: { b: any }, c: any, d: any) {
>f3 : ([a]: [any], { b }: { b: any; }, c: any, d: any) => void
>   : ^^^^^^     ^^^^^^^^^           ^^^^^   ^^^^^   ^^^^^^^^^
>a : any
>  : ^^^
>b : any
>  : ^^^
>b : any
>  : ^^^
>c : any
>  : ^^^
>d : any
>  : ^^^
}
function f4({b}: { b }, x: { b }) { // error in type instead
>f4 : ({ b }: { b: any; }, x: { b: any; }) => void
>   : ^^^^^^^^     ^^^   ^^^^^     ^^^   ^^^^^^^^^
>b : any
>  : ^^^
>b : any
>  : ^^^
>x : { b: any; }
>  : ^^^^^^^^^^^
>b : any
>  : ^^^
}
function f5([a1] = [undefined], {b1} = { b1: null }, c1 = undefined, d1 = null) { // error
>f5 : ([a1]?: [undefined], { b1 }?: { b1: null; }, c1?: undefined, d1?: null) => void
>   : ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>a1 : undefined
>   : ^^^^^^^^^
>[undefined] : [undefined]
>            : ^^^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^
>b1 : null
>   : ^^^^
>{ b1: null } : { b1: null; }
>             : ^^^^^^^^^^^^^
>b1 : null
>   : ^^^^
>c1 : undefined
>   : ^^^^^^^^^
>undefined : undefined
>          : ^^^^^^^^^
>d1 : null
>   : ^^^^
}
