typeParameterArgumentEquivalence4.ts(2,13): error TS7006: Parameter 'item' implicitly has an 'any' type.
typeParameterArgumentEquivalence4.ts(3,13): error TS7006: Parameter 'item' implicitly has an 'any' type.
typeParameterArgumentEquivalence4.ts(4,5): error TS2322: Type '(item: any) => T' is not assignable to type '(item: any) => U'.
  Type 'T' is not assignable to type 'U'.
    'U' could be instantiated with an arbitrary type which could be unrelated to 'T'.
typeParameterArgumentEquivalence4.ts(4,9): error TS2454: Variable 'y' is used before being assigned.
typeParameterArgumentEquivalence4.ts(5,5): error TS2322: Type '(item: any) => U' is not assignable to type '(item: any) => T'.
  Type 'U' is not assignable to type 'T'.
    'T' could be instantiated with an arbitrary type which could be unrelated to 'U'.


==== typeParameterArgumentEquivalence4.ts (5 errors) ====
    function foo<T,U>() {
        var x: (item) => U;
                ~~~~
!!! error TS7006: Parameter 'item' implicitly has an 'any' type.
        var y: (item) => T;
                ~~~~
!!! error TS7006: Parameter 'item' implicitly has an 'any' type.
        x = y;  // Should be an error
        ~
!!! error TS2322: Type '(item: any) => T' is not assignable to type '(item: any) => U'.
!!! error TS2322:   Type 'T' is not assignable to type 'U'.
!!! error TS2322:     'U' could be instantiated with an arbitrary type which could be unrelated to 'T'.
!!! related TS2208 typeParameterArgumentEquivalence4.ts:1:14: This type parameter might need an `extends U` constraint.
            ~
!!! error TS2454: Variable 'y' is used before being assigned.
        y = x;  // Shound be an error
        ~
!!! error TS2322: Type '(item: any) => U' is not assignable to type '(item: any) => T'.
!!! error TS2322:   Type 'U' is not assignable to type 'T'.
!!! error TS2322:     'T' could be instantiated with an arbitrary type which could be unrelated to 'U'.
!!! related TS2208 typeParameterArgumentEquivalence4.ts:1:16: This type parameter might need an `extends T` constraint.
    }
    