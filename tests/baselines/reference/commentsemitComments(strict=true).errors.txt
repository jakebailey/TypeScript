commentsemitComments.ts(11,1): error TS2454: Variable 'fooVar' is used before being assigned.
commentsemitComments.ts(42,17): error TS7006: Parameter 'aOrb' implicitly has an 'any' type.
commentsemitComments.ts(56,5): error TS7013: Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.
commentsemitComments.ts(86,13): error TS7005: Variable 'x' implicitly has an 'any' type.


==== commentsemitComments.ts (4 errors) ====
    /** Variable comments*/
    var myVariable = 10;
    
    /** function comments*/
    function foo(/** parameter comment*/p: number) {
    }
    
    /** variable with function type comment*/
    var fooVar: () => void;
    foo(50);
    fooVar();
    ~~~~~~
!!! error TS2454: Variable 'fooVar' is used before being assigned.
    
    /**class comment*/
    class c {
        /** constructor comment*/
        constructor() {
        }
    
        /** property comment */
        public b = 10;
    
        /** function comment */
        public myFoo() {
            return this.b;
        }
    
        /** getter comment*/
        public get prop1() {
            return this.b;
        }
    
        /** setter comment*/
        public set prop1(val: number) {
            this.b = val;
        }
    
        /** overload signature1*/
        public foo1(a: number): string;
        /** Overload signature 2*/
        public foo1(b: string): string;
        /** overload implementation signature*/
        public foo1(aOrb) {
                    ~~~~
!!! error TS7006: Parameter 'aOrb' implicitly has an 'any' type.
            return aOrb.toString();
        }
    }
    
    /**instance comment*/
    var i = new c();
    
    /** interface comments*/
    interface i1 {
        /** caller comments*/
        (a: number): number;
    
        /** new comments*/
        new (b: string);
        ~~~~~~~~~~~~~~~~
!!! error TS7013: Construct signature, which lacks return-type annotation, implicitly has an 'any' return type.
    
        /**indexer property*/
        [a: number]: string;
    
        /** function property;*/
        myFoo(/*param prop*/a: number): string;
    
        /** prop*/
        prop: string;
    }
    
    /**interface instance comments*/
    var i1_i: i1;
    
    /** this is module comment*/
    module m1 {
        /** class b */
        export class b {
            constructor(public x: number) {
    
            }
        }
    
        /// module m2
        export module m2 {
        }
    }
    
    /// this is x
    declare var x;
                ~
!!! error TS7005: Variable 'x' implicitly has an 'any' type.
    