propertyAccessStringIndexSignatureNoImplicitAny.ts(3,1): error TS2454: Variable 'flags' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(4,1): error TS2454: Variable 'flags' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(5,1): error TS2454: Variable 'flags' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(6,1): error TS2454: Variable 'flags' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(10,1): error TS2454: Variable 'empty' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(10,7): error TS2339: Property 'nope' does not exist on type 'Empty'.
propertyAccessStringIndexSignatureNoImplicitAny.ts(11,1): error TS2454: Variable 'empty' is used before being assigned.
propertyAccessStringIndexSignatureNoImplicitAny.ts(11,1): error TS7053: Element implicitly has an 'any' type because expression of type '"not allowed either"' can't be used to index type 'Empty'.
  Property 'not allowed either' does not exist on type 'Empty'.


==== propertyAccessStringIndexSignatureNoImplicitAny.ts (8 errors) ====
    interface Flags { [name: string]: boolean }
    let flags: Flags;
    flags.b;
    ~~~~~
!!! error TS2454: Variable 'flags' is used before being assigned.
    flags.f;
    ~~~~~
!!! error TS2454: Variable 'flags' is used before being assigned.
    flags.isNotNecessarilyNeverFalse;
    ~~~~~
!!! error TS2454: Variable 'flags' is used before being assigned.
    flags['this is fine'];
    ~~~~~
!!! error TS2454: Variable 'flags' is used before being assigned.
    
    interface Empty { }
    let empty: Empty;
    empty.nope;
    ~~~~~
!!! error TS2454: Variable 'empty' is used before being assigned.
          ~~~~
!!! error TS2339: Property 'nope' does not exist on type 'Empty'.
    empty["not allowed either"];
    ~~~~~
!!! error TS2454: Variable 'empty' is used before being assigned.
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS7053: Element implicitly has an 'any' type because expression of type '"not allowed either"' can't be used to index type 'Empty'.
!!! error TS7053:   Property 'not allowed either' does not exist on type 'Empty'.
    