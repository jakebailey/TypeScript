es5-asyncFunctionObjectLiterals.ts(1,13): error TS7005: Variable 'x' implicitly has an 'any' type.
es5-asyncFunctionObjectLiterals.ts(1,16): error TS7005: Variable 'y' implicitly has an 'any' type.
es5-asyncFunctionObjectLiterals.ts(1,19): error TS7005: Variable 'z' implicitly has an 'any' type.
es5-asyncFunctionObjectLiterals.ts(1,22): error TS7005: Variable 'a' implicitly has an 'any' type.
es5-asyncFunctionObjectLiterals.ts(1,25): error TS7005: Variable 'b' implicitly has an 'any' type.
es5-asyncFunctionObjectLiterals.ts(1,28): error TS7005: Variable 'c' implicitly has an 'any' type.


==== es5-asyncFunctionObjectLiterals.ts (6 errors) ====
    declare var x, y, z, a, b, c;
                ~
!!! error TS7005: Variable 'x' implicitly has an 'any' type.
                   ~
!!! error TS7005: Variable 'y' implicitly has an 'any' type.
                      ~
!!! error TS7005: Variable 'z' implicitly has an 'any' type.
                         ~
!!! error TS7005: Variable 'a' implicitly has an 'any' type.
                            ~
!!! error TS7005: Variable 'b' implicitly has an 'any' type.
                               ~
!!! error TS7005: Variable 'c' implicitly has an 'any' type.
    
    async function objectLiteral0() {
        x = {
            a: await y,
            b: z
        };
    }
    
    async function objectLiteral1() {
        x = {
            a: y,
            b: await z
        };
    }
    
    async function objectLiteral2() {
        x = {
            [await a]: y,
            b: z
        };
    }
    
    async function objectLiteral3() {
        x = {
            [a]: await y,
            b: z
        };
    }
    
    async function objectLiteral4() {
        x = {
            a: await y,
            [b]: z
        };
    }
    
    async function objectLiteral5() {
        x = {
            a: y,
            [await b]: z
        };
    }
    
    async function objectLiteral6() {
        x = {
            a: y,
            [b]: await z
        };
    }