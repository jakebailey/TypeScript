f2.ts(2,5): error TS2564: Property 'n' has no initializer and is not definitely assigned in the constructor.
f3.ts(6,28): error TS7008: Member 'a' implicitly has an 'any' type.
f3.ts(7,28): error TS7008: Member 'a' implicitly has an 'any' type.
f3.ts(11,5): error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
f3.ts(11,21): error TS2307: Cannot find module './f2' or its corresponding type declarations.
f3.ts(12,5): error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
f3.ts(13,5): error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
f4.ts(5,9): error TS2454: Variable 'a' is used before being assigned.


==== f1.ts (0 errors) ====
    export class A {}
    
==== f2.ts (1 errors) ====
    export class B {
        n: number;
        ~
!!! error TS2564: Property 'n' has no initializer and is not definitely assigned in the constructor.
    }
    
==== f3.ts (6 errors) ====
    import {A} from "./f1";
    
    A.prototype.foo = function () { return undefined; }
    
    namespace N {
        export interface Ifc { a }
                               ~
!!! error TS7008: Member 'a' implicitly has an 'any' type.
        export interface Cls { a }
                               ~
!!! error TS7008: Member 'a' implicitly has an 'any' type.
    }
    
    declare module "./f1" {
        import {B} from "./f2";
        ~~~~~~
!!! error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
                        ~~~~~~
!!! error TS2307: Cannot find module './f2' or its corresponding type declarations.
        import I = N.Ifc;
        ~~~~~~
!!! error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
        import C = N.Cls;
        ~~~~~~
!!! error TS2667: Imports are not permitted in module augmentations. Consider moving them to the enclosing external module.
        interface A {
            foo(): B;
            bar(): I;
            baz(): C;
        }
    }
    
==== f4.ts (1 errors) ====
    import {A} from "./f1";
    import "./f3";
    
    let a: A;
    let b = a.foo().n;
            ~
!!! error TS2454: Variable 'a' is used before being assigned.